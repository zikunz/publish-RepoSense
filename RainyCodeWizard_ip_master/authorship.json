[{"path":"docs/README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"hussain1998"},"content":"# Duke User Guide","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"hussain1998"},"content":"This is a Command Line Interface (CLI) application for managing tasks. It allows users to add and manage their various types of tasks.","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"hussain1998"},"content":"- [Features](#features)","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"hussain1998"},"content":"    - [Adding Todo](#adding-a-todo-task--todo)","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"hussain1998"},"content":"    - [Adding Deadline](#adding-a-deadline-task--deadline)","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"hussain1998"},"content":"    - [Adding Event](#adding-an-event-task--event)","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"hussain1998"},"content":"    - [Displaying tasks](#displaying-tasks--list)","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"hussain1998"},"content":"    - [Marking task as done](#changing-status-of-a-task--done)","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"hussain1998"},"content":"    - [Removing task](#removing-a-task--delete)","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"hussain1998"},"content":"    - [Finding keyword](Searching-for-a-keyword--find)","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"hussain1998"},"content":"    - [Exiting Duke](#exiting-duke--bye)","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"hussain1998"},"content":"- [Command summary](#command-summary)","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"-"},"content":"## Features","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"hussain1998"},"content":"### Notes about command format:","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"hussain1998"},"content":"- Words in UPPER_CASE are the parameters to be supplied by the user. ","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"hussain1998"},"content":"    - e.g. in `todo DESCRIPTION`, DESCRIPTION is a parameter which can be used ","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"hussain1998"},"content":"      as `todo CS2113T Quiz`.","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"hussain1998"},"content":"- Every task will be displayed in the following format:`[Task_Type][Status] Description`","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"hussain1998"},"content":"    - e.g. `[T][ ] CS2113T Quiz`","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"hussain1998"},"content":"    - 3 Types of task:","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"hussain1998"},"content":"      - Todo: `[T]`","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"hussain1998"},"content":"      - Deadline: `[D]`","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"hussain1998"},"content":"      - Event: `[E]`","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"hussain1998"},"content":"    - 2 Types of statuses:","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"hussain1998"},"content":"      - Completed: `[X]`","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"hussain1998"},"content":"      - Not Complete: `[ ]`","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"hussain1998"},"content":"### Adding a Todo task : `todo`","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"hussain1998"},"content":"Adds a Todo task to the task list.","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"hussain1998"},"content":"Format: `todo DESCRIPTION`","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"hussain1998"},"content":"Example:","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"hussain1998"},"content":"- `todo Study for midterms`","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"hussain1998"},"content":"Expected outcome:","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"-"},"content":"\t","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"hussain1998"},"content":"  `Added: [T][ ] Study for midterms`","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"hussain1998"},"content":"### Adding a Deadline task : `deadline`","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"hussain1998"},"content":"Adds a Deadlne task to the task list.","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"hussain1998"},"content":"Format: `deadline DESCRIPTION /by END_TIME`","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"hussain1998"},"content":"Example:","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"hussain1998"},"content":"- `deadline Study for midterms /by this thursday`","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"-"},"content":"Expected outcome:","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"-"},"content":"\t","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"hussain1998"},"content":"  `Added: [D][ ] Study for midterms (by: this thursday)`","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"hussain1998"},"content":"","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"hussain1998"},"content":"### Adding an Event task : `event`","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"hussain1998"},"content":"Adds a Event task to the task list.","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"hussain1998"},"content":"","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"hussain1998"},"content":"Format: `event DESCRIPTION /at EVENT_TIME`","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"hussain1998"},"content":"","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"hussain1998"},"content":"Example:","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"hussain1998"},"content":"- `event Midterms /at this friday`","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"hussain1998"},"content":"","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"hussain1998"},"content":"Expected outcome:","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"hussain1998"},"content":"\t","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"hussain1998"},"content":"  `Added: [E][ ] Midterms (at: this friday)`","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"hussain1998"},"content":"","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"hussain1998"},"content":"### Displaying tasks : `list`","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"hussain1998"},"content":"Displays all the tasks in the task list.","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"hussain1998"},"content":"","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"hussain1998"},"content":"Format: `list`","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"hussain1998"},"content":"","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"hussain1998"},"content":"Expected outcome:\t","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"hussain1998"},"content":"```markdown","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"hussain1998"},"content":"1.[D][ ] Cs3235 quiz (by: this friday)","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"hussain1998"},"content":"2.[E][ ] Cs2113t meeting (at: this sunday 10am)","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"hussain1998"},"content":"3.[T][X] Meet my friend","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"hussain1998"},"content":"```","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"hussain1998"},"content":"","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"hussain1998"},"content":"### Changing status of a task : `done`","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"hussain1998"},"content":"Marks a task as done.","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"hussain1998"},"content":"","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"hussain1998"},"content":"Format: `done TASK_NUMBER`","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"hussain1998"},"content":"","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"hussain1998"},"content":"Example:","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"hussain1998"},"content":"- `done 2`","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"-"},"content":"Expected outcome:","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"hussain1998"},"content":"```markdown","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"hussain1998"},"content":"1.[D][ ] Cs3235 quiz (by: this friday)","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"hussain1998"},"content":"2.[E][X] Cs2113t meeting (at: this sunday 10am)","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"hussain1998"},"content":"3.[T][X] Meet my friend","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"hussain1998"},"content":"```","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"hussain1998"},"content":"### Removing a task : `delete`","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"hussain1998"},"content":"Deletes a task from the task list.","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"hussain1998"},"content":"","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"hussain1998"},"content":"Format: `delete TASK_NUMBER`","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"hussain1998"},"content":"","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"hussain1998"},"content":"Example:","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"hussain1998"},"content":"- `delete 3`","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"hussain1998"},"content":"","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"hussain1998"},"content":"Expected outcome:","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"hussain1998"},"content":"```markdown","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"hussain1998"},"content":"Noted. I\u0027ve removed this task:","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"hussain1998"},"content":"[T][X] Meet my friend","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"hussain1998"},"content":"```","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"hussain1998"},"content":"### Searching for a keyword : `find`","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"hussain1998"},"content":"Searches for keyword in the description of all the tasks. Keyword is **case-sensitive**.","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"hussain1998"},"content":"","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"hussain1998"},"content":"Format: `find KEYWORD`","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"hussain1998"},"content":"","isFullCredit":false},{"lineNumber":111,"author":{"gitId":"hussain1998"},"content":"Example:","isFullCredit":false},{"lineNumber":112,"author":{"gitId":"hussain1998"},"content":"- `find Cs`","isFullCredit":false},{"lineNumber":113,"author":{"gitId":"hussain1998"},"content":"","isFullCredit":false},{"lineNumber":114,"author":{"gitId":"hussain1998"},"content":"Expected outcome:","isFullCredit":false},{"lineNumber":115,"author":{"gitId":"hussain1998"},"content":"```markdown","isFullCredit":false},{"lineNumber":116,"author":{"gitId":"hussain1998"},"content":"[D][ ] Cs3235 quiz (by: this friday)","isFullCredit":false},{"lineNumber":117,"author":{"gitId":"hussain1998"},"content":"[E][X] Cs2113t meeting (at: this sunday 10am)","isFullCredit":false},{"lineNumber":118,"author":{"gitId":"hussain1998"},"content":"```","isFullCredit":false},{"lineNumber":119,"author":{"gitId":"hussain1998"},"content":"","isFullCredit":false},{"lineNumber":120,"author":{"gitId":"hussain1998"},"content":"### Exiting Duke : `bye`","isFullCredit":false},{"lineNumber":121,"author":{"gitId":"hussain1998"},"content":"Exits the program.","isFullCredit":false},{"lineNumber":122,"author":{"gitId":"hussain1998"},"content":"","isFullCredit":false},{"lineNumber":123,"author":{"gitId":"hussain1998"},"content":"Format: `bye`","isFullCredit":false},{"lineNumber":124,"author":{"gitId":"hussain1998"},"content":"","isFullCredit":false},{"lineNumber":125,"author":{"gitId":"hussain1998"},"content":"Expected outcome:","isFullCredit":false},{"lineNumber":126,"author":{"gitId":"hussain1998"},"content":"```markdown","isFullCredit":false},{"lineNumber":127,"author":{"gitId":"hussain1998"},"content":"Bye. Hope to see you again soon!","isFullCredit":false},{"lineNumber":128,"author":{"gitId":"hussain1998"},"content":"```","isFullCredit":false},{"lineNumber":129,"author":{"gitId":"hussain1998"},"content":"","isFullCredit":false},{"lineNumber":130,"author":{"gitId":"hussain1998"},"content":"### Storing and Loading of data","isFullCredit":false},{"lineNumber":131,"author":{"gitId":"hussain1998"},"content":"","isFullCredit":false},{"lineNumber":132,"author":{"gitId":"hussain1998"},"content":"The tasks in the task list will be automatically stored in a text file when exiting Duke.","isFullCredit":false},{"lineNumber":133,"author":{"gitId":"hussain1998"},"content":"","isFullCredit":false},{"lineNumber":134,"author":{"gitId":"hussain1998"},"content":"The tasks will also be automatically loaded into the task list from the text file when Duke starts.","isFullCredit":false},{"lineNumber":135,"author":{"gitId":"hussain1998"},"content":"","isFullCredit":false},{"lineNumber":136,"author":{"gitId":"hussain1998"},"content":"## Command Summary","isFullCredit":false},{"lineNumber":137,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":138,"author":{"gitId":"hussain1998"},"content":"Command | Format | Example","isFullCredit":false},{"lineNumber":139,"author":{"gitId":"hussain1998"},"content":"------- | ------ | -------","isFullCredit":false},{"lineNumber":140,"author":{"gitId":"hussain1998"},"content":"`todo` | `todo DESCRIPTION` | `todo Study for midterms`","isFullCredit":false},{"lineNumber":141,"author":{"gitId":"hussain1998"},"content":"`deadline` | `deadline DESCRIPTION /by END_TIME` | `deadline Study for midterms /by this thursday`","isFullCredit":false},{"lineNumber":142,"author":{"gitId":"hussain1998"},"content":"`event` | `event DESCRIPTION /at EVENT_TIME` | `event Midterms /at this friday`","isFullCredit":false},{"lineNumber":143,"author":{"gitId":"hussain1998"},"content":"`list` | `list` | `list`","isFullCredit":false},{"lineNumber":144,"author":{"gitId":"hussain1998"},"content":"`done` | `done TASK_NUMBER` | `done 2`","isFullCredit":false},{"lineNumber":145,"author":{"gitId":"hussain1998"},"content":"`delete` | `delete TASK_NUMBER` | `delete 3`","isFullCredit":false},{"lineNumber":146,"author":{"gitId":"hussain1998"},"content":"`find` | `find KEYWORD` | `find Cs`","isFullCredit":false},{"lineNumber":147,"author":{"gitId":"hussain1998"},"content":"`bye` | `bye` | `bye`","isFullCredit":false}],"authorContributionMap":{"hussain1998":129,"-":18}},{"path":"src/main/java/duke/Command.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"hussain1998"},"content":"package duke;","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"hussain1998"},"content":"","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"hussain1998"},"content":"/**","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"hussain1998"},"content":" * Types of commands available in Duke.","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"hussain1998"},"content":" */","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"hussain1998"},"content":"public enum Command {","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"hussain1998"},"content":"    BYE, DONE, ERROR, LIST, TODO, DEADLINE, EVENT, DELETE, FIND,","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"hussain1998"},"content":"    DONE_ERROR, DELETE_ERROR, FIND_ERROR, ADD_ERROR","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"hussain1998"},"content":"}","isFullCredit":false}],"authorContributionMap":{"hussain1998":9}},{"path":"src/main/java/duke/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"hussain1998"},"content":"package duke;","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"hussain1998"},"content":"","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"hussain1998"},"content":"import duke.exceptions.InvalidCommandException;","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"hussain1998"},"content":"import duke.executer.CommandExecutor;","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"hussain1998"},"content":"import duke.list.TaskList;","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"hussain1998"},"content":"import duke.ui.TextUi;","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"hussain1998"},"content":"","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"hussain1998"},"content":"import java.io.IOException;","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"hussain1998"},"content":"","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"hussain1998"},"content":"import static duke.storage.Storage.loadFile;","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"hussain1998"},"content":"import static duke.storage.Storage.saveFile;","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"hussain1998"},"content":"","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"hussain1998"},"content":"/**","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"hussain1998"},"content":" * Entry point of the Duke application.","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"hussain1998"},"content":" * Initializes the application and starts the interaction with the user.","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"hussain1998"},"content":" */","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"-"},"content":"public class Duke {","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"hussain1998"},"content":"    private TaskList taskList;","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"hussain1998"},"content":"    private TextUi ui;","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"hussain1998"},"content":"","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"-"},"content":"    public static void main(String[] args) {","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"hussain1998"},"content":"        new Duke().run();","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"hussain1998"},"content":"    }","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"hussain1998"},"content":"","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"hussain1998"},"content":"    /**","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"hussain1998"},"content":"     * Runs the program until termination.","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"hussain1998"},"content":"     */","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"hussain1998"},"content":"    private void run() {","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"hussain1998"},"content":"        start();","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"hussain1998"},"content":"        runCommandLoopUntilExitCommand();","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"hussain1998"},"content":"        exit();","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"hussain1998"},"content":"    }","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"hussain1998"},"content":"","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"hussain1998"},"content":"    private void start() {","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"hussain1998"},"content":"        this.ui \u003d new TextUi();","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"hussain1998"},"content":"        this.taskList \u003d new TaskList();","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"hussain1998"},"content":"        ui.printInitialMsg();","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"hussain1998"},"content":"        try {","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"hussain1998"},"content":"            loadFile(taskList);","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"hussain1998"},"content":"        } catch (IOException | SecurityException e) {","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"hussain1998"},"content":"            ui.printLoadFileError();","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"hussain1998"},"content":"        } catch (InvalidCommandException e) {","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"hussain1998"},"content":"            ui.corruptedFileError();","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"hussain1998"},"content":"        }","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"hussain1998"},"content":"    }","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"hussain1998"},"content":"","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"hussain1998"},"content":"    private void runCommandLoopUntilExitCommand() {","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"hussain1998"},"content":"        Command command;","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"hussain1998"},"content":"        CommandExecutor executor \u003d new CommandExecutor();","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"hussain1998"},"content":"        do {","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"hussain1998"},"content":"            String userCommandText \u003d ui.scanInput();","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"hussain1998"},"content":"            command \u003d executor.executeCommand(taskList, userCommandText);","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"hussain1998"},"content":"            ui.printReaction(taskList, command, userCommandText);","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"hussain1998"},"content":"        } while (!ui.isExit(command));","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"hussain1998"},"content":"    }","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"hussain1998"},"content":"","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"hussain1998"},"content":"    private void exit() {","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"hussain1998"},"content":"        try {","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"hussain1998"},"content":"            saveFile(taskList);","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"hussain1998"},"content":"        } catch (IOException | SecurityException e) {","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"hussain1998"},"content":"            ui.printSaveFileError();","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"hussain1998"},"content":"        }","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"hussain1998"},"content":"        System.exit(0);","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"-"},"content":"    }","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"-"},"content":"}","isFullCredit":false}],"authorContributionMap":{"hussain1998":61,"-":4}},{"path":"src/main/java/duke/exceptions/EmptyDescriptionException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"hussain1998"},"content":"package duke.exceptions;","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"hussain1998"},"content":"","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"hussain1998"},"content":"/**","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"hussain1998"},"content":" * Signals that the description of a Task is empty.","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"hussain1998"},"content":" */","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"hussain1998"},"content":"public class EmptyDescriptionException extends Exception {","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"hussain1998"},"content":"}","isFullCredit":false}],"authorContributionMap":{"hussain1998":7}},{"path":"src/main/java/duke/exceptions/InvalidCommandException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"hussain1998"},"content":"package duke.exceptions;","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"hussain1998"},"content":"","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"hussain1998"},"content":"/**","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"hussain1998"},"content":" * Signals that command entered by user is invalid.","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"hussain1998"},"content":" */","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"hussain1998"},"content":"public class InvalidCommandException extends Exception {","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"hussain1998"},"content":"}","isFullCredit":false}],"authorContributionMap":{"hussain1998":7}},{"path":"src/main/java/duke/executer/CommandExecutor.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"hussain1998"},"content":"package duke.executer;","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"hussain1998"},"content":"","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"hussain1998"},"content":"import duke.Command;","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"hussain1998"},"content":"import duke.exceptions.EmptyDescriptionException;","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"hussain1998"},"content":"import duke.exceptions.InvalidCommandException;","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"hussain1998"},"content":"import duke.list.TaskList;","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"hussain1998"},"content":"import duke.parser.Parser;","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"hussain1998"},"content":"","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"hussain1998"},"content":"/**","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"hussain1998"},"content":" * Executes User commands.","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"hussain1998"},"content":" */","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"hussain1998"},"content":"public class CommandExecutor {","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"hussain1998"},"content":"","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"hussain1998"},"content":"    /**","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"hussain1998"},"content":"     * Given the user input, processes the input into various commands.","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"hussain1998"},"content":"     * Then, validates and executes those commands","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"hussain1998"},"content":"     *","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"hussain1998"},"content":"     * @param taskList ArrayList of tasks.","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"hussain1998"},"content":"     * @param input    User input.","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"hussain1998"},"content":"     * @return the command based on input if it passes validation. Else, returns error.","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"hussain1998"},"content":"     */","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"hussain1998"},"content":"    public Command executeCommand(TaskList taskList, String input) {","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"hussain1998"},"content":"        Command command;","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"hussain1998"},"content":"        try {","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"hussain1998"},"content":"            command \u003d Parser.getCommand(input);","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"hussain1998"},"content":"            switch (command) {","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"hussain1998"},"content":"            case TODO:","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"hussain1998"},"content":"                command \u003d taskList.addTask(input.replaceFirst(\"todo \", \"\"), Command.TODO);","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"hussain1998"},"content":"                break;","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"hussain1998"},"content":"            case DEADLINE:","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"hussain1998"},"content":"                command \u003d taskList.addTask(input.replaceFirst(\"deadline \", \"\"), Command.DEADLINE);","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"hussain1998"},"content":"                break;","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"hussain1998"},"content":"            case EVENT:","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"hussain1998"},"content":"                command \u003d taskList.addTask(input.replaceFirst(\"event \", \"\"), Command.EVENT);","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"hussain1998"},"content":"                break;","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"hussain1998"},"content":"            case DONE:","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"hussain1998"},"content":"                try {","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"hussain1998"},"content":"                    Parser.validateDescription(input, Command.DONE);","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"hussain1998"},"content":"                } catch (EmptyDescriptionException e) {","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"hussain1998"},"content":"                    command \u003d Command.DONE_ERROR;","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"hussain1998"},"content":"                    break;","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"hussain1998"},"content":"                }","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"hussain1998"},"content":"                try {","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"hussain1998"},"content":"                    int taskNum \u003d Parser.getTaskNum(input, Command.DONE);","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"hussain1998"},"content":"                    taskList.finishTask(taskNum - 1);","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"hussain1998"},"content":"                } catch (IndexOutOfBoundsException | NumberFormatException e) {","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"hussain1998"},"content":"                    command \u003d Command.DONE_ERROR;","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"hussain1998"},"content":"                }","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"hussain1998"},"content":"                break;","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"hussain1998"},"content":"            case DELETE:","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"hussain1998"},"content":"                try {","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"hussain1998"},"content":"                    Parser.validateDescription(input, Command.DELETE);","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"hussain1998"},"content":"                } catch (EmptyDescriptionException e) {","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"hussain1998"},"content":"                    command \u003d Command.DELETE_ERROR;","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"hussain1998"},"content":"                }","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"hussain1998"},"content":"                break;","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"hussain1998"},"content":"            case FIND:","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"hussain1998"},"content":"                try {","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"hussain1998"},"content":"                    Parser.validateDescription(input, Command.FIND);","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"hussain1998"},"content":"                } catch (EmptyDescriptionException e) {","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"hussain1998"},"content":"                    command \u003d Command.FIND_ERROR;","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"hussain1998"},"content":"                }","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"hussain1998"},"content":"                break;","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"hussain1998"},"content":"            default:","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"hussain1998"},"content":"                break;","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"hussain1998"},"content":"            }","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"hussain1998"},"content":"        } catch (InvalidCommandException e) {","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"hussain1998"},"content":"            command \u003d Command.ERROR;","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"hussain1998"},"content":"        }","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"hussain1998"},"content":"        return command;","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"hussain1998"},"content":"    }","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"hussain1998"},"content":"}","isFullCredit":false}],"authorContributionMap":{"hussain1998":72}},{"path":"src/main/java/duke/list/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"hussain1998"},"content":"package duke.list;","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"hussain1998"},"content":"","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"hussain1998"},"content":"import duke.Command;","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"hussain1998"},"content":"import duke.exceptions.EmptyDescriptionException;","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"hussain1998"},"content":"import duke.parser.Parser;","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"hussain1998"},"content":"import duke.task.Deadline;","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"hussain1998"},"content":"import duke.task.Event;","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"hussain1998"},"content":"import duke.task.Task;","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"hussain1998"},"content":"import duke.task.ToDo;","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"hussain1998"},"content":"","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"hussain1998"},"content":"import java.util.ArrayList;","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"hussain1998"},"content":"","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"hussain1998"},"content":"/**","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"hussain1998"},"content":" * Represents the entire task list. Contains the Tasks inputted by user.","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"hussain1998"},"content":" */","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"hussain1998"},"content":"public class TaskList {","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"hussain1998"},"content":"    private final ArrayList\u003cTask\u003e tasks;","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"hussain1998"},"content":"","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"hussain1998"},"content":"    /**","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"hussain1998"},"content":"     * Creates an empty ArrayList to store Tasks.","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"hussain1998"},"content":"     */","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"hussain1998"},"content":"    public TaskList() {","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"hussain1998"},"content":"        tasks \u003d new ArrayList\u003c\u003e();","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"hussain1998"},"content":"    }","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"hussain1998"},"content":"","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"hussain1998"},"content":"    /**","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"hussain1998"},"content":"     * Add a Task to the TaskList","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"hussain1998"},"content":"     *","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"hussain1998"},"content":"     * @param description description of a task","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"hussain1998"},"content":"     * @param command     user\u0027s command","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"hussain1998"},"content":"     * @return user\u0027s command if valid task. Else, return error.","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"hussain1998"},"content":"     */","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"hussain1998"},"content":"    public Command addTask(String description, Command command) {","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"hussain1998"},"content":"        Task newTask;","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"hussain1998"},"content":"        String[] stringArray;","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"hussain1998"},"content":"        try {","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"hussain1998"},"content":"            Parser.validateDescription(description, command);","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"hussain1998"},"content":"        } catch (EmptyDescriptionException e) {","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"hussain1998"},"content":"            return Command.ADD_ERROR;","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"hussain1998"},"content":"        }","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"hussain1998"},"content":"        switch (command) {","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"hussain1998"},"content":"        case TODO:","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"hussain1998"},"content":"            newTask \u003d new ToDo(description);","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"hussain1998"},"content":"            break;","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"hussain1998"},"content":"        case EVENT:","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"hussain1998"},"content":"            stringArray \u003d description.split(\"/at\");","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"hussain1998"},"content":"            try {","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"hussain1998"},"content":"                newTask \u003d new Event(stringArray[0], stringArray[1].trim());","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"hussain1998"},"content":"            } catch (ArrayIndexOutOfBoundsException e) {","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"hussain1998"},"content":"                return Command.ERROR;","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"hussain1998"},"content":"            }","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"hussain1998"},"content":"            break;","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"hussain1998"},"content":"        case DEADLINE:","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"hussain1998"},"content":"            stringArray \u003d description.split(\"/by\");","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"hussain1998"},"content":"            try {","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"hussain1998"},"content":"                newTask \u003d new Deadline(stringArray[0], stringArray[1].trim());","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"hussain1998"},"content":"            } catch (ArrayIndexOutOfBoundsException e) {","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"hussain1998"},"content":"                return Command.ERROR;","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"hussain1998"},"content":"            }","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"hussain1998"},"content":"            break;","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"hussain1998"},"content":"        default:","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"hussain1998"},"content":"            return Command.ERROR;","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"hussain1998"},"content":"        }","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"hussain1998"},"content":"        tasks.add(newTask);","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"hussain1998"},"content":"        return command;","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"hussain1998"},"content":"    }","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"hussain1998"},"content":"","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"hussain1998"},"content":"    /**","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"hussain1998"},"content":"     * Get string representation of TaskList.","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"hussain1998"},"content":"     *","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"hussain1998"},"content":"     * @return a String containing all the information of all the Tasks","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"hussain1998"},"content":"     */","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"hussain1998"},"content":"    @Override","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"hussain1998"},"content":"    public String toString() {","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"hussain1998"},"content":"        StringBuilder outputString \u003d new StringBuilder();","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"hussain1998"},"content":"        for (int i \u003d 0; i \u003c tasks.size(); i++) {","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"hussain1998"},"content":"            outputString.append(i + 1);","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"hussain1998"},"content":"            outputString.append(\".\");","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"hussain1998"},"content":"            outputString.append(tasks.get(i).toString());","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"hussain1998"},"content":"            outputString.append(System.lineSeparator());","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"hussain1998"},"content":"        }","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"hussain1998"},"content":"        if (outputString.length() \u003d\u003d 0) {","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"hussain1998"},"content":"            return \"List is empty!\";","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"hussain1998"},"content":"        }","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"hussain1998"},"content":"        return outputString.toString().trim();","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"hussain1998"},"content":"    }","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"hussain1998"},"content":"","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"hussain1998"},"content":"    /**","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"hussain1998"},"content":"     * Set Task as done, given index of the Task in TaskList.","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"hussain1998"},"content":"     *","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"hussain1998"},"content":"     * @param taskIndex index of Task in TaskList","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"hussain1998"},"content":"     * @throws IndexOutOfBoundsException If taskIndex is out of range","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"hussain1998"},"content":"     */","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"hussain1998"},"content":"    public void finishTask(int taskIndex) throws IndexOutOfBoundsException {","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"hussain1998"},"content":"        tasks.get(taskIndex).setDone();","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"hussain1998"},"content":"    }","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"hussain1998"},"content":"","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"hussain1998"},"content":"    /**","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"hussain1998"},"content":"     * Set the last Task in TaskList as done.","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"hussain1998"},"content":"     */","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"hussain1998"},"content":"    public void finishLastTask() {","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"hussain1998"},"content":"        tasks.get(tasks.size() - 1).setDone();","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"hussain1998"},"content":"    }","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"hussain1998"},"content":"","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"hussain1998"},"content":"    /**","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"hussain1998"},"content":"     * Get the last Task of TaskList","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"hussain1998"},"content":"     *","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"hussain1998"},"content":"     * @return the last Task in TaskList","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"hussain1998"},"content":"     */","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"hussain1998"},"content":"    public Task getLastTask() {","isFullCredit":false},{"lineNumber":111,"author":{"gitId":"hussain1998"},"content":"        return getTask(getSize() - 1);","isFullCredit":false},{"lineNumber":112,"author":{"gitId":"hussain1998"},"content":"    }","isFullCredit":false},{"lineNumber":113,"author":{"gitId":"hussain1998"},"content":"","isFullCredit":false},{"lineNumber":114,"author":{"gitId":"hussain1998"},"content":"    /**","isFullCredit":false},{"lineNumber":115,"author":{"gitId":"hussain1998"},"content":"     * Get a Task in TaskList given the index of Task","isFullCredit":false},{"lineNumber":116,"author":{"gitId":"hussain1998"},"content":"     *","isFullCredit":false},{"lineNumber":117,"author":{"gitId":"hussain1998"},"content":"     * @param taskIndex index of Task in TaskList","isFullCredit":false},{"lineNumber":118,"author":{"gitId":"hussain1998"},"content":"     * @return a Task in that index","isFullCredit":false},{"lineNumber":119,"author":{"gitId":"hussain1998"},"content":"     */","isFullCredit":false},{"lineNumber":120,"author":{"gitId":"hussain1998"},"content":"    public Task getTask(int taskIndex) {","isFullCredit":false},{"lineNumber":121,"author":{"gitId":"hussain1998"},"content":"        return tasks.get(taskIndex);","isFullCredit":false},{"lineNumber":122,"author":{"gitId":"hussain1998"},"content":"    }","isFullCredit":false},{"lineNumber":123,"author":{"gitId":"hussain1998"},"content":"","isFullCredit":false},{"lineNumber":124,"author":{"gitId":"hussain1998"},"content":"    /**","isFullCredit":false},{"lineNumber":125,"author":{"gitId":"hussain1998"},"content":"     * Get size of TaskList","isFullCredit":false},{"lineNumber":126,"author":{"gitId":"hussain1998"},"content":"     *","isFullCredit":false},{"lineNumber":127,"author":{"gitId":"hussain1998"},"content":"     * @return size of TaskList","isFullCredit":false},{"lineNumber":128,"author":{"gitId":"hussain1998"},"content":"     */","isFullCredit":false},{"lineNumber":129,"author":{"gitId":"hussain1998"},"content":"    public int getSize() {","isFullCredit":false},{"lineNumber":130,"author":{"gitId":"hussain1998"},"content":"        return tasks.size();","isFullCredit":false},{"lineNumber":131,"author":{"gitId":"hussain1998"},"content":"    }","isFullCredit":false},{"lineNumber":132,"author":{"gitId":"hussain1998"},"content":"","isFullCredit":false},{"lineNumber":133,"author":{"gitId":"hussain1998"},"content":"    /**","isFullCredit":false},{"lineNumber":134,"author":{"gitId":"hussain1998"},"content":"     * Get the to be deleted Task before deleting. Afterwards, delete the Task.","isFullCredit":false},{"lineNumber":135,"author":{"gitId":"hussain1998"},"content":"     *","isFullCredit":false},{"lineNumber":136,"author":{"gitId":"hussain1998"},"content":"     * @param taskIndex index of Task in TaskList","isFullCredit":false},{"lineNumber":137,"author":{"gitId":"hussain1998"},"content":"     * @return the deleted Task","isFullCredit":false},{"lineNumber":138,"author":{"gitId":"hussain1998"},"content":"     */","isFullCredit":false},{"lineNumber":139,"author":{"gitId":"hussain1998"},"content":"    public Task getDeletedTask(int taskIndex) {","isFullCredit":false},{"lineNumber":140,"author":{"gitId":"hussain1998"},"content":"        Task task \u003d tasks.get(taskIndex);","isFullCredit":false},{"lineNumber":141,"author":{"gitId":"hussain1998"},"content":"        deleteTask(taskIndex);","isFullCredit":false},{"lineNumber":142,"author":{"gitId":"hussain1998"},"content":"        return task;","isFullCredit":false},{"lineNumber":143,"author":{"gitId":"hussain1998"},"content":"    }","isFullCredit":false},{"lineNumber":144,"author":{"gitId":"hussain1998"},"content":"","isFullCredit":false},{"lineNumber":145,"author":{"gitId":"hussain1998"},"content":"    private void deleteTask(int taskNum) {","isFullCredit":false},{"lineNumber":146,"author":{"gitId":"hussain1998"},"content":"        tasks.remove(taskNum);","isFullCredit":false},{"lineNumber":147,"author":{"gitId":"hussain1998"},"content":"    }","isFullCredit":false},{"lineNumber":148,"author":{"gitId":"hussain1998"},"content":"","isFullCredit":false},{"lineNumber":149,"author":{"gitId":"hussain1998"},"content":"    /**","isFullCredit":false},{"lineNumber":150,"author":{"gitId":"hussain1998"},"content":"     * Find all Tasks with corresponding keywords in the ArrayList","isFullCredit":false},{"lineNumber":151,"author":{"gitId":"hussain1998"},"content":"     *","isFullCredit":false},{"lineNumber":152,"author":{"gitId":"hussain1998"},"content":"     * @param keyword keyword to search for","isFullCredit":false},{"lineNumber":153,"author":{"gitId":"hussain1998"},"content":"     * @return an ArrayList of Tasks that contains the keyword","isFullCredit":false},{"lineNumber":154,"author":{"gitId":"hussain1998"},"content":"     */","isFullCredit":false},{"lineNumber":155,"author":{"gitId":"hussain1998"},"content":"    public ArrayList\u003cTask\u003e findTask(String keyword) {","isFullCredit":false},{"lineNumber":156,"author":{"gitId":"hussain1998"},"content":"        ArrayList\u003cTask\u003e foundTasks \u003d new ArrayList\u003c\u003e();","isFullCredit":false},{"lineNumber":157,"author":{"gitId":"hussain1998"},"content":"        for (Task task : tasks) {","isFullCredit":false},{"lineNumber":158,"author":{"gitId":"hussain1998"},"content":"            if (task.getDescription().contains(keyword)) {","isFullCredit":false},{"lineNumber":159,"author":{"gitId":"hussain1998"},"content":"                foundTasks.add(task);","isFullCredit":false},{"lineNumber":160,"author":{"gitId":"hussain1998"},"content":"            }","isFullCredit":false},{"lineNumber":161,"author":{"gitId":"hussain1998"},"content":"        }","isFullCredit":false},{"lineNumber":162,"author":{"gitId":"hussain1998"},"content":"        return foundTasks;","isFullCredit":false},{"lineNumber":163,"author":{"gitId":"hussain1998"},"content":"    }","isFullCredit":false},{"lineNumber":164,"author":{"gitId":"hussain1998"},"content":"}","isFullCredit":false}],"authorContributionMap":{"hussain1998":164}},{"path":"src/main/java/duke/parser/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"hussain1998"},"content":"package duke.parser;","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"hussain1998"},"content":"","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"hussain1998"},"content":"import duke.Command;","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"hussain1998"},"content":"import duke.exceptions.EmptyDescriptionException;","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"hussain1998"},"content":"import duke.exceptions.InvalidCommandException;","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"hussain1998"},"content":"","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"hussain1998"},"content":"/**","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"hussain1998"},"content":" * Parses user inputs.","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"hussain1998"},"content":" */","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"hussain1998"},"content":"public class Parser {","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"hussain1998"},"content":"","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"hussain1998"},"content":"    /**","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"hussain1998"},"content":"     * Parses user input into command for execution","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"hussain1998"},"content":"     *","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"hussain1998"},"content":"     * @param input full user input string","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"hussain1998"},"content":"     * @return the command based on the user input","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"hussain1998"},"content":"     * @throws InvalidCommandException If wrong input entered by user","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"hussain1998"},"content":"     */","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"hussain1998"},"content":"    public static Command getCommand(String input) throws InvalidCommandException {","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"hussain1998"},"content":"        if (input.equals(\"list\")) {","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"hussain1998"},"content":"            return Command.LIST;","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"hussain1998"},"content":"        } else if (input.equals(\"bye\")) {","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"hussain1998"},"content":"            return Command.BYE;","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"hussain1998"},"content":"        } else if (input.startsWith(\"done \")) {","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"hussain1998"},"content":"            return Command.DONE;","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"hussain1998"},"content":"        } else if (input.startsWith(\"todo \")) {","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"hussain1998"},"content":"            return Command.TODO;","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"hussain1998"},"content":"        } else if (input.startsWith(\"deadline \")) {","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"hussain1998"},"content":"            return Command.DEADLINE;","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"hussain1998"},"content":"        } else if (input.startsWith(\"event \")) {","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"hussain1998"},"content":"            return Command.EVENT;","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"hussain1998"},"content":"        } else if (input.startsWith(\"delete \")) {","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"hussain1998"},"content":"            return Command.DELETE;","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"hussain1998"},"content":"        } else if (input.startsWith(\"find \")) {","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"hussain1998"},"content":"            return Command.FIND;","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"hussain1998"},"content":"        } else {","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"hussain1998"},"content":"            throw new InvalidCommandException();","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"hussain1998"},"content":"        }","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"hussain1998"},"content":"    }","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"hussain1998"},"content":"","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"hussain1998"},"content":"    /**","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"hussain1998"},"content":"     * Checks if the description entered by user is valid for the respective command.","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"hussain1998"},"content":"     *","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"hussain1998"},"content":"     * @param description description part of the user input","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"hussain1998"},"content":"     * @param command     user\u0027s intended command","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"hussain1998"},"content":"     * @throws EmptyDescriptionException If description is empty","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"hussain1998"},"content":"     */","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"hussain1998"},"content":"    public static void validateDescription(String description, Command command) throws EmptyDescriptionException {","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"hussain1998"},"content":"        boolean isEmptyDescription \u003d false;","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"hussain1998"},"content":"        if (description.equals(\"\")) {","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"hussain1998"},"content":"            isEmptyDescription \u003d true;","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"hussain1998"},"content":"        }","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"hussain1998"},"content":"        switch (command) {","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"hussain1998"},"content":"        case DONE:","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"hussain1998"},"content":"            if (description.replace(\"done \", \"\").equals(\"\")) {","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"hussain1998"},"content":"                isEmptyDescription \u003d true;","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"hussain1998"},"content":"            }","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"hussain1998"},"content":"            break;","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"hussain1998"},"content":"        case DELETE:","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"hussain1998"},"content":"            if (description.replace(\"delete \", \"\").equals(\"\")) {","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"hussain1998"},"content":"                isEmptyDescription \u003d true;","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"hussain1998"},"content":"            }","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"hussain1998"},"content":"            break;","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"hussain1998"},"content":"        case FIND:","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"hussain1998"},"content":"            if (description.replace(\"find \", \"\").equals(\"\")) {","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"hussain1998"},"content":"                isEmptyDescription \u003d true;","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"hussain1998"},"content":"            }","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"hussain1998"},"content":"            break;","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"hussain1998"},"content":"        case EVENT:","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"hussain1998"},"content":"            String[] stringArray \u003d description.split(\"/at\");","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"hussain1998"},"content":"            for (String keyword : stringArray) {","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"hussain1998"},"content":"                isEmptyDescription \u003d isEmptyDescription || keyword.trim().isEmpty();","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"hussain1998"},"content":"            }","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"hussain1998"},"content":"            break;","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"hussain1998"},"content":"        case DEADLINE:","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"hussain1998"},"content":"            stringArray \u003d description.split(\"/by\");","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"hussain1998"},"content":"            for (String keyword : stringArray) {","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"hussain1998"},"content":"                isEmptyDescription \u003d isEmptyDescription || keyword.trim().isEmpty();","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"hussain1998"},"content":"            }","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"hussain1998"},"content":"            break;","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"hussain1998"},"content":"        default:","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"hussain1998"},"content":"            break;","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"hussain1998"},"content":"        }","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"hussain1998"},"content":"        if (isEmptyDescription) {","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"hussain1998"},"content":"            throw new EmptyDescriptionException();","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"hussain1998"},"content":"        }","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"hussain1998"},"content":"    }","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"hussain1998"},"content":"","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"hussain1998"},"content":"    /**","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"hussain1998"},"content":"     * Parses the user input to get task number. Only for Done and Delete command.","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"hussain1998"},"content":"     *","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"hussain1998"},"content":"     * @param input   full user input string","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"hussain1998"},"content":"     * @param command user\u0027s intended command","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"hussain1998"},"content":"     * @return the task number indicated by user","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"hussain1998"},"content":"     */","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"hussain1998"},"content":"    public static int getTaskNum(String input, Command command) throws NumberFormatException {","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"hussain1998"},"content":"        switch (command) {","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"hussain1998"},"content":"        case DONE:","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"hussain1998"},"content":"            return Integer.parseInt(input.replaceFirst(\"done \", \"\"));","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"hussain1998"},"content":"        case DELETE:","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"hussain1998"},"content":"            return Integer.parseInt(input.replaceFirst(\"delete \", \"\"));","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"hussain1998"},"content":"        default:","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"hussain1998"},"content":"            return -1;","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"hussain1998"},"content":"        }","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"hussain1998"},"content":"    }","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"hussain1998"},"content":"}","isFullCredit":false}],"authorContributionMap":{"hussain1998":106}},{"path":"src/main/java/duke/storage/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"hussain1998"},"content":"package duke.storage;","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"hussain1998"},"content":"","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"hussain1998"},"content":"import duke.Command;","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"hussain1998"},"content":"import duke.list.TaskList;","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"hussain1998"},"content":"import duke.exceptions.InvalidCommandException;","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"hussain1998"},"content":"import duke.parser.Parser;","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"hussain1998"},"content":"import duke.task.Deadline;","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"hussain1998"},"content":"import duke.task.Event;","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"hussain1998"},"content":"import duke.task.Task;","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"hussain1998"},"content":"import duke.task.ToDo;","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"hussain1998"},"content":"","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"hussain1998"},"content":"import java.io.File;","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"hussain1998"},"content":"import java.io.FileNotFoundException;","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"hussain1998"},"content":"import java.io.FileWriter;","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"hussain1998"},"content":"import java.io.IOException;","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"hussain1998"},"content":"import java.util.Scanner;","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"hussain1998"},"content":"","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"hussain1998"},"content":"/**","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"hussain1998"},"content":" * Represents the Storage used to store the tasks.","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"hussain1998"},"content":" */","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"hussain1998"},"content":"public class Storage {","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"hussain1998"},"content":"    private static final String DIRECTORY_NAME \u003d \"data\";","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"hussain1998"},"content":"    private static final String FILE_NAME \u003d \"duke.txt\";","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"hussain1998"},"content":"    private static final String DONE \u003d \"1\";","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"hussain1998"},"content":"","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"hussain1998"},"content":"    /**","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"hussain1998"},"content":"     * Loads tasks from file into taskList.","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"hussain1998"},"content":"     *","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"hussain1998"},"content":"     * @param taskList ArrayList of tasks","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"hussain1998"},"content":"     * @throws IOException             If I/O is failed or interrupted","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"hussain1998"},"content":"     * @throws InvalidCommandException If file was corrupted and wrong command is given","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"hussain1998"},"content":"     * @throws SecurityException       If there is a security violation in accessing the file","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"hussain1998"},"content":"     */","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"hussain1998"},"content":"    public static void loadFile(TaskList taskList) throws IOException, InvalidCommandException, SecurityException {","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"hussain1998"},"content":"        createDirectory();","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"hussain1998"},"content":"        createFile();","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"hussain1998"},"content":"        loadTasks(taskList);","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"hussain1998"},"content":"    }","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"hussain1998"},"content":"","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"hussain1998"},"content":"    private static void createDirectory() throws SecurityException {","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"hussain1998"},"content":"        File directory \u003d new File(DIRECTORY_NAME);","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"hussain1998"},"content":"        if (!directory.exists()) {","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"hussain1998"},"content":"            directory.mkdir();","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"hussain1998"},"content":"        }","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"hussain1998"},"content":"    }","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"hussain1998"},"content":"","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"hussain1998"},"content":"    private static void createFile() throws SecurityException, IOException {","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"hussain1998"},"content":"        File file \u003d new File(DIRECTORY_NAME + \"/\" + FILE_NAME);","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"hussain1998"},"content":"        if (!file.exists()) {","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"hussain1998"},"content":"            file.createNewFile();","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"hussain1998"},"content":"        }","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"hussain1998"},"content":"    }","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"hussain1998"},"content":"","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"hussain1998"},"content":"    private static void loadTasks(TaskList taskList) throws FileNotFoundException, InvalidCommandException {","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"hussain1998"},"content":"        File file \u003d new File(DIRECTORY_NAME + \"/\" + FILE_NAME);","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"hussain1998"},"content":"        Scanner scanner \u003d new Scanner(file);","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"hussain1998"},"content":"        while (scanner.hasNext()) {","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"hussain1998"},"content":"            processTasks(taskList, scanner.nextLine());","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"hussain1998"},"content":"        }","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"hussain1998"},"content":"    }","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"hussain1998"},"content":"","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"hussain1998"},"content":"    private static void processTasks(TaskList taskList, String task) throws InvalidCommandException {","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"hussain1998"},"content":"        String[] taskArray \u003d task.split(\"\\\\|\");","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"hussain1998"},"content":"","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"hussain1998"},"content":"        switch (Parser.getCommand(taskArray[0])) {","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"hussain1998"},"content":"        case TODO:","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"hussain1998"},"content":"            taskList.addTask(taskArray[2], Command.TODO);","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"hussain1998"},"content":"            break;","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"hussain1998"},"content":"        case EVENT:","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"hussain1998"},"content":"            taskList.addTask(taskArray[2], Command.EVENT);","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"hussain1998"},"content":"            break;","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"hussain1998"},"content":"        case DEADLINE:","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"hussain1998"},"content":"            taskList.addTask(taskArray[2], Command.DEADLINE);","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"hussain1998"},"content":"            break;","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"hussain1998"},"content":"        }","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"hussain1998"},"content":"        if (taskArray[1].equals(DONE)) {","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"hussain1998"},"content":"            taskList.finishLastTask();","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"hussain1998"},"content":"        }","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"hussain1998"},"content":"    }","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"hussain1998"},"content":"","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"hussain1998"},"content":"    /**","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"hussain1998"},"content":"     * Saves tasks into file from taskList.","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"hussain1998"},"content":"     *","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"hussain1998"},"content":"     * @param taskList ArrayList of tasks","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"hussain1998"},"content":"     * @throws IOException       If I/O is failed or interrupted","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"hussain1998"},"content":"     * @throws SecurityException If there is a security violation in accessing the file","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"hussain1998"},"content":"     */","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"hussain1998"},"content":"    public static void saveFile(TaskList taskList) throws IOException, SecurityException {","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"hussain1998"},"content":"        createDirectory();","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"hussain1998"},"content":"        createFile();","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"hussain1998"},"content":"        saveTasks(taskList);","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"hussain1998"},"content":"    }","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"hussain1998"},"content":"","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"hussain1998"},"content":"    private static void saveTasks(TaskList taskList) throws IOException {","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"hussain1998"},"content":"        FileWriter writer \u003d new FileWriter(DIRECTORY_NAME + \"/\" + FILE_NAME);","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"hussain1998"},"content":"        int taskCount \u003d taskList.getSize();","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"hussain1998"},"content":"        for (int i \u003d 0; i \u003c taskCount; i++) {","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"hussain1998"},"content":"            Task task \u003d taskList.getTask(i);","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"hussain1998"},"content":"            String outputString \u003d processTasks(task) + \"\\n\";","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"hussain1998"},"content":"            writer.write(outputString);","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"hussain1998"},"content":"        }","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"hussain1998"},"content":"        writer.close();","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"hussain1998"},"content":"    }","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"hussain1998"},"content":"","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"hussain1998"},"content":"    private static String processTasks(Task task) {","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"hussain1998"},"content":"        String[] outputArray \u003d new String[3];","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"hussain1998"},"content":"        if (task instanceof ToDo) {","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"hussain1998"},"content":"            outputArray[0] \u003d \"todo \";","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"hussain1998"},"content":"            outputArray[2] \u003d task.getDescription();","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"hussain1998"},"content":"        } else if (task instanceof Deadline) {","isFullCredit":false},{"lineNumber":111,"author":{"gitId":"hussain1998"},"content":"            outputArray[0] \u003d \"deadline \";","isFullCredit":false},{"lineNumber":112,"author":{"gitId":"hussain1998"},"content":"            outputArray[2] \u003d task.getDescription() + \"/by \" + ((Deadline) task).getEndTime();","isFullCredit":false},{"lineNumber":113,"author":{"gitId":"hussain1998"},"content":"        } else if (task instanceof Event) {","isFullCredit":false},{"lineNumber":114,"author":{"gitId":"hussain1998"},"content":"            outputArray[0] \u003d \"event \";","isFullCredit":false},{"lineNumber":115,"author":{"gitId":"hussain1998"},"content":"            outputArray[2] \u003d task.getDescription() + \"/at \" + ((Event) task).getEventTime();","isFullCredit":false},{"lineNumber":116,"author":{"gitId":"hussain1998"},"content":"        }","isFullCredit":false},{"lineNumber":117,"author":{"gitId":"hussain1998"},"content":"        if (task.isDone()) {","isFullCredit":false},{"lineNumber":118,"author":{"gitId":"hussain1998"},"content":"            outputArray[1] \u003d \"|1|\";","isFullCredit":false},{"lineNumber":119,"author":{"gitId":"hussain1998"},"content":"        } else {","isFullCredit":false},{"lineNumber":120,"author":{"gitId":"hussain1998"},"content":"            outputArray[1] \u003d \"|0|\";","isFullCredit":false},{"lineNumber":121,"author":{"gitId":"hussain1998"},"content":"        }","isFullCredit":false},{"lineNumber":122,"author":{"gitId":"hussain1998"},"content":"        return String.join(\"\", outputArray);","isFullCredit":false},{"lineNumber":123,"author":{"gitId":"hussain1998"},"content":"    }","isFullCredit":false},{"lineNumber":124,"author":{"gitId":"hussain1998"},"content":"","isFullCredit":false},{"lineNumber":125,"author":{"gitId":"hussain1998"},"content":"}","isFullCredit":false}],"authorContributionMap":{"hussain1998":125}},{"path":"src/main/java/duke/task/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"hussain1998"},"content":"package duke.task;","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"hussain1998"},"content":"","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"hussain1998"},"content":"/**","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"hussain1998"},"content":" * Represents a type of a task with description and deadline.","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"hussain1998"},"content":" */","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"hussain1998"},"content":"public class Deadline extends Task {","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"hussain1998"},"content":"    String endTime;","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"hussain1998"},"content":"","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"hussain1998"},"content":"    /**","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"hussain1998"},"content":"     * Creates a Deadline task with description and the end time of deadline.","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"hussain1998"},"content":"     *","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"hussain1998"},"content":"     * @param description description of a task","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"hussain1998"},"content":"     * @param endTime     end time of a deadline task","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"hussain1998"},"content":"     */","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"hussain1998"},"content":"    public Deadline(String description, String endTime) {","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"hussain1998"},"content":"        super(description);","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"hussain1998"},"content":"        this.endTime \u003d endTime;","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"hussain1998"},"content":"    }","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"hussain1998"},"content":"","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"hussain1998"},"content":"    /**","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"hussain1998"},"content":"     * Get the end time of a deadline task.","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"hussain1998"},"content":"     *","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"hussain1998"},"content":"     * @return String of end time","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"hussain1998"},"content":"     */","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"hussain1998"},"content":"    public String getEndTime() {","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"hussain1998"},"content":"        return endTime;","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"hussain1998"},"content":"    }","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"hussain1998"},"content":"","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"hussain1998"},"content":"    @Override","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"hussain1998"},"content":"    public String getDescription() {","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"hussain1998"},"content":"        return super.getDescription();","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"hussain1998"},"content":"    }","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"hussain1998"},"content":"","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"hussain1998"},"content":"    /**","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"hussain1998"},"content":"     * {@inheritDoc}","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"hussain1998"},"content":"     *","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"hussain1998"},"content":"     * @return concatenation of task status icon, its description and its end time.","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"hussain1998"},"content":"     */","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"hussain1998"},"content":"    @Override","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"hussain1998"},"content":"    public String toString() {","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"hussain1998"},"content":"        return getStatusIcon() + super.getDescription() + \"(by: \" + endTime + \")\";","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"hussain1998"},"content":"    }","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"hussain1998"},"content":"","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"hussain1998"},"content":"    @Override","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"hussain1998"},"content":"    public String getStatusIcon() {","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"hussain1998"},"content":"        return \"[D]\" + super.getStatusIcon();","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"hussain1998"},"content":"    }","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"hussain1998"},"content":"}","isFullCredit":false}],"authorContributionMap":{"hussain1998":48}},{"path":"src/main/java/duke/task/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"hussain1998"},"content":"package duke.task;","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"hussain1998"},"content":"","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"hussain1998"},"content":"/**","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"hussain1998"},"content":" * Represents a type of a task with description and event time.","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"hussain1998"},"content":" */","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"hussain1998"},"content":"public class Event extends Task {","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"hussain1998"},"content":"    String eventTime;","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"hussain1998"},"content":"","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"hussain1998"},"content":"    /**","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"hussain1998"},"content":"     * Creates a Event task with description and the event time.","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"hussain1998"},"content":"     *","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"hussain1998"},"content":"     * @param description description of a task","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"hussain1998"},"content":"     * @param eventTime   event time of a event task","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"hussain1998"},"content":"     */","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"hussain1998"},"content":"    public Event(String description, String eventTime) {","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"hussain1998"},"content":"        super(description);","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"hussain1998"},"content":"        this.eventTime \u003d eventTime;","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"hussain1998"},"content":"    }","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"hussain1998"},"content":"","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"hussain1998"},"content":"    /**","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"hussain1998"},"content":"     * Get event time of a Event task.","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"hussain1998"},"content":"     *","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"hussain1998"},"content":"     * @return String of event time","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"hussain1998"},"content":"     */","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"hussain1998"},"content":"    public String getEventTime() {","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"hussain1998"},"content":"        return eventTime;","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"hussain1998"},"content":"    }","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"hussain1998"},"content":"","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"hussain1998"},"content":"    @Override","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"hussain1998"},"content":"    public String getDescription() {","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"hussain1998"},"content":"        return super.getDescription();","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"hussain1998"},"content":"    }","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"hussain1998"},"content":"","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"hussain1998"},"content":"    /**","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"hussain1998"},"content":"     * {@inheritDoc}","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"hussain1998"},"content":"     *","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"hussain1998"},"content":"     * @return concatenation of task status icon, its description and its event time.","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"hussain1998"},"content":"     */","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"hussain1998"},"content":"    @Override","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"hussain1998"},"content":"    public String toString() {","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"hussain1998"},"content":"        return getStatusIcon() + super.getDescription() + \"(at: \" + eventTime + \")\";","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"hussain1998"},"content":"    }","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"hussain1998"},"content":"","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"hussain1998"},"content":"    @Override","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"hussain1998"},"content":"    public String getStatusIcon() {","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"hussain1998"},"content":"        return \"[E]\" + super.getStatusIcon();","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"hussain1998"},"content":"    }","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"hussain1998"},"content":"}","isFullCredit":false}],"authorContributionMap":{"hussain1998":48}},{"path":"src/main/java/duke/task/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"hussain1998"},"content":"package duke.task;","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"hussain1998"},"content":"","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"hussain1998"},"content":"/**","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"hussain1998"},"content":" * Representation of generic task object.","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"hussain1998"},"content":" */","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"hussain1998"},"content":"public class Task {","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"hussain1998"},"content":"    protected String description;","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"hussain1998"},"content":"    protected boolean isDone;","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"hussain1998"},"content":"","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"hussain1998"},"content":"    /**","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"hussain1998"},"content":"     * Creates a Task instance with description.","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"hussain1998"},"content":"     *","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"hussain1998"},"content":"     * @param description description of a task","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"hussain1998"},"content":"     */","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"hussain1998"},"content":"    public Task(String description) {","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"hussain1998"},"content":"        this.description \u003d description;","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"hussain1998"},"content":"        this.isDone \u003d false;","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"hussain1998"},"content":"    }","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"hussain1998"},"content":"","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"hussain1998"},"content":"    /**","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"hussain1998"},"content":"     * Set status of a task to be done.","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"hussain1998"},"content":"     */","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"hussain1998"},"content":"    public void setDone() {","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"hussain1998"},"content":"        isDone \u003d true;","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"hussain1998"},"content":"    }","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"hussain1998"},"content":"","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"hussain1998"},"content":"    /**","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"hussain1998"},"content":"     * Get status of a task.","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"hussain1998"},"content":"     *","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"hussain1998"},"content":"     * @return true if task is done and false if not done.","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"hussain1998"},"content":"     */","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"hussain1998"},"content":"    public boolean isDone() {","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"hussain1998"},"content":"        return isDone;","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"hussain1998"},"content":"    }","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"hussain1998"},"content":"","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"hussain1998"},"content":"    /**","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"hussain1998"},"content":"     * Get string representation of a task.","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"hussain1998"},"content":"     *","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"hussain1998"},"content":"     * @return concatenation of task status icon and its description.","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"hussain1998"},"content":"     */","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"hussain1998"},"content":"    @Override","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"hussain1998"},"content":"    public String toString() {","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"hussain1998"},"content":"        return getStatusIcon() + getDescription();","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"hussain1998"},"content":"    }","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"hussain1998"},"content":"","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"hussain1998"},"content":"    /**","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"hussain1998"},"content":"     * Get status icon of a task","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"hussain1998"},"content":"     *","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"hussain1998"},"content":"     * @return status icon","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"hussain1998"},"content":"     */","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"hussain1998"},"content":"    protected String getStatusIcon() {","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"hussain1998"},"content":"        return (isDone ? \"[X] \" : \"[ ] \");","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"hussain1998"},"content":"    }","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"hussain1998"},"content":"","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"hussain1998"},"content":"    /**","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"hussain1998"},"content":"     * Get description of a task","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"hussain1998"},"content":"     *","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"hussain1998"},"content":"     * @return description of a task","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"hussain1998"},"content":"     */","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"hussain1998"},"content":"    public String getDescription() {","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"hussain1998"},"content":"        return description;","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"hussain1998"},"content":"    }","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"hussain1998"},"content":"}","isFullCredit":false}],"authorContributionMap":{"hussain1998":63}},{"path":"src/main/java/duke/task/ToDo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"hussain1998"},"content":"package duke.task;","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"hussain1998"},"content":"","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"hussain1998"},"content":"/**","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"hussain1998"},"content":" * Representation of a type of task with only the description.","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"hussain1998"},"content":" */","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"hussain1998"},"content":"public class ToDo extends Task {","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"hussain1998"},"content":"","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"hussain1998"},"content":"    /**","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"hussain1998"},"content":"     * Creates a Todo task with description only.","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"hussain1998"},"content":"     *","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"hussain1998"},"content":"     * @param description description of a task","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"hussain1998"},"content":"     */","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"hussain1998"},"content":"    public ToDo(String description) {","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"hussain1998"},"content":"        super(description);","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"hussain1998"},"content":"    }","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"hussain1998"},"content":"","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"hussain1998"},"content":"    @Override","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"hussain1998"},"content":"    public String getStatusIcon() {","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"hussain1998"},"content":"        return \"[T]\" + super.getStatusIcon();","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"hussain1998"},"content":"    }","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"hussain1998"},"content":"}","isFullCredit":false}],"authorContributionMap":{"hussain1998":21}},{"path":"src/main/java/duke/ui/TextUi.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"hussain1998"},"content":"package duke.ui;","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"hussain1998"},"content":"","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"hussain1998"},"content":"import duke.Command;","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"hussain1998"},"content":"import duke.list.TaskList;","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"hussain1998"},"content":"import duke.parser.Parser;","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"hussain1998"},"content":"import duke.task.Task;","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"hussain1998"},"content":"","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"hussain1998"},"content":"import java.util.ArrayList;","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"hussain1998"},"content":"import java.util.Scanner;","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"hussain1998"},"content":"","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"hussain1998"},"content":"/**","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"hussain1998"},"content":" * Ui handles the input and output of the Duke program.","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"hussain1998"},"content":" */","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"hussain1998"},"content":"public class TextUi {","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"hussain1998"},"content":"    private final Scanner in;","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"hussain1998"},"content":"","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"hussain1998"},"content":"    /**","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"hussain1998"},"content":"     * Initialises the input of the Duke program.","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"hussain1998"},"content":"     */","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"hussain1998"},"content":"    public TextUi() {","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"hussain1998"},"content":"        in \u003d initialiseInput();","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"hussain1998"},"content":"    }","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"hussain1998"},"content":"","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"hussain1998"},"content":"    private Scanner initialiseInput() {","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"hussain1998"},"content":"        Scanner scanner \u003d new Scanner(System.in);","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"hussain1998"},"content":"        return scanner;","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"hussain1998"},"content":"    }","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"hussain1998"},"content":"","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"hussain1998"},"content":"    /**","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"hussain1998"},"content":"     * Prints the starting message of the Duke program.","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"hussain1998"},"content":"     */","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"hussain1998"},"content":"    public void printInitialMsg() {","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"hussain1998"},"content":"        String logo \u003d \" ____        _        \\n\"","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"hussain1998"},"content":"                + \"|  _ \\\\ _   _| | _____ \\n\"","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"hussain1998"},"content":"                + \"| | | | | | | |/ / _ \\\\\\n\"","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"hussain1998"},"content":"                + \"| |_| | |_| |   \u003c  __/\\n\"","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"hussain1998"},"content":"                + \"|____/ \\\\__,_|_|\\\\_\\\\___|\\n\";","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"hussain1998"},"content":"        System.out.println(\"Hello from\\n\" + logo);","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"hussain1998"},"content":"        System.out.println(\"Hello! I\u0027m Duke\");","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"hussain1998"},"content":"        System.out.println(\"What can I do for you?\");","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"hussain1998"},"content":"    }","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"hussain1998"},"content":"","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"hussain1998"},"content":"    /**","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"hussain1998"},"content":"     * Scans for the next line of input from user.","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"hussain1998"},"content":"     *","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"hussain1998"},"content":"     * @return line of input String","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"hussain1998"},"content":"     */","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"hussain1998"},"content":"    public String scanInput() {","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"hussain1998"},"content":"        return in.nextLine();","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"hussain1998"},"content":"    }","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"hussain1998"},"content":"","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"hussain1998"},"content":"    /**","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"hussain1998"},"content":"     * Prints reaction based on the command value.","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"hussain1998"},"content":"     *","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"hussain1998"},"content":"     * @param taskList        ArrayList of tasks","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"hussain1998"},"content":"     * @param command         Command of user","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"hussain1998"},"content":"     * @param userCommandText full String of user input","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"hussain1998"},"content":"     */","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"hussain1998"},"content":"    public void printReaction(TaskList taskList, Command command, String userCommandText) {","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"hussain1998"},"content":"        switch (command) {","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"hussain1998"},"content":"        case BYE:","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"hussain1998"},"content":"            System.out.println(\"Bye. Hope to see you again soon!\");","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"hussain1998"},"content":"            break;","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"hussain1998"},"content":"        case LIST:","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"hussain1998"},"content":"            System.out.println(taskList);","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"hussain1998"},"content":"            break;","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"hussain1998"},"content":"        case DONE:","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"hussain1998"},"content":"            int taskNum \u003d Parser.getTaskNum(userCommandText, Command.DONE);","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"hussain1998"},"content":"            System.out.println(\"Nice! I\u0027ve marked this task as done:\" + System.lineSeparator() +","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"hussain1998"},"content":"                    taskList.getTask(taskNum - 1));","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"hussain1998"},"content":"            break;","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"hussain1998"},"content":"        case DELETE:","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"hussain1998"},"content":"            taskNum \u003d Parser.getTaskNum(userCommandText, Command.DELETE);","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"hussain1998"},"content":"            System.out.println(\"Noted. I\u0027ve removed this task:\" + System.lineSeparator() +","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"hussain1998"},"content":"                    taskList.getDeletedTask(taskNum - 1));","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"hussain1998"},"content":"            break;","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"hussain1998"},"content":"        case FIND:","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"hussain1998"},"content":"            ArrayList\u003cTask\u003e foundTasks \u003d taskList.findTask(userCommandText.replaceFirst(\"find \", \"\"));","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"hussain1998"},"content":"            if (foundTasks.size() \u003d\u003d 0) {","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"hussain1998"},"content":"                System.out.println(\"No tasks found.\");","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"hussain1998"},"content":"                break;","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"hussain1998"},"content":"            }","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"hussain1998"},"content":"            System.out.println(\"Here are the matching tasks in your list:\");","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"hussain1998"},"content":"            for (Task task : foundTasks) {","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"hussain1998"},"content":"                System.out.println(task);","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"hussain1998"},"content":"            }","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"hussain1998"},"content":"            break;","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"hussain1998"},"content":"        case DONE_ERROR:","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"hussain1998"},"content":"            System.out.println(\"Done command needs task number within the range of the list!\");","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"hussain1998"},"content":"            break;","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"hussain1998"},"content":"        case DELETE_ERROR:","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"hussain1998"},"content":"            System.out.println(\"Delete command needs task number within the range of the list!\");","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"hussain1998"},"content":"            break;","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"hussain1998"},"content":"        case FIND_ERROR:","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"hussain1998"},"content":"            System.out.println(\"Find command needs a keyword!\");","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"hussain1998"},"content":"            break;","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"hussain1998"},"content":"        case ADD_ERROR:","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"hussain1998"},"content":"            System.out.println(\"The description cannot be empty!\");","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"hussain1998"},"content":"            break;","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"hussain1998"},"content":"        case ERROR:","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"hussain1998"},"content":"            System.out.println(\"Wrong command entered!: \" + userCommandText);","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"hussain1998"},"content":"            break;","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"hussain1998"},"content":"        default:","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"hussain1998"},"content":"            System.out.println(\"Added: \" + taskList.getLastTask());","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"hussain1998"},"content":"        }","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"hussain1998"},"content":"    }","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"hussain1998"},"content":"","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"hussain1998"},"content":"    /**","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"hussain1998"},"content":"     * Checks if user wants to exit the Duke program","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"hussain1998"},"content":"     *","isFullCredit":false},{"lineNumber":111,"author":{"gitId":"hussain1998"},"content":"     * @param command user command","isFullCredit":false},{"lineNumber":112,"author":{"gitId":"hussain1998"},"content":"     * @return true if user wants to exit. Else, false.","isFullCredit":false},{"lineNumber":113,"author":{"gitId":"hussain1998"},"content":"     */","isFullCredit":false},{"lineNumber":114,"author":{"gitId":"hussain1998"},"content":"    public boolean isExit(Command command) {","isFullCredit":false},{"lineNumber":115,"author":{"gitId":"hussain1998"},"content":"        return command \u003d\u003d Command.BYE;","isFullCredit":false},{"lineNumber":116,"author":{"gitId":"hussain1998"},"content":"    }","isFullCredit":false},{"lineNumber":117,"author":{"gitId":"hussain1998"},"content":"","isFullCredit":false},{"lineNumber":118,"author":{"gitId":"hussain1998"},"content":"    /**","isFullCredit":false},{"lineNumber":119,"author":{"gitId":"hussain1998"},"content":"     * Error message when unable to load the file.","isFullCredit":false},{"lineNumber":120,"author":{"gitId":"hussain1998"},"content":"     */","isFullCredit":false},{"lineNumber":121,"author":{"gitId":"hussain1998"},"content":"    public void printLoadFileError() {","isFullCredit":false},{"lineNumber":122,"author":{"gitId":"hussain1998"},"content":"        System.out.println(\"Unable to load records from a file. Continuing Duke with an empty record.\");","isFullCredit":false},{"lineNumber":123,"author":{"gitId":"hussain1998"},"content":"    }","isFullCredit":false},{"lineNumber":124,"author":{"gitId":"hussain1998"},"content":"","isFullCredit":false},{"lineNumber":125,"author":{"gitId":"hussain1998"},"content":"    /**","isFullCredit":false},{"lineNumber":126,"author":{"gitId":"hussain1998"},"content":"     * Error message when unable to save into the file","isFullCredit":false},{"lineNumber":127,"author":{"gitId":"hussain1998"},"content":"     */","isFullCredit":false},{"lineNumber":128,"author":{"gitId":"hussain1998"},"content":"    public void printSaveFileError() {","isFullCredit":false},{"lineNumber":129,"author":{"gitId":"hussain1998"},"content":"        System.out.println(\"Unable to save records into file. Duke exiting.\");","isFullCredit":false},{"lineNumber":130,"author":{"gitId":"hussain1998"},"content":"    }","isFullCredit":false},{"lineNumber":131,"author":{"gitId":"hussain1998"},"content":"","isFullCredit":false},{"lineNumber":132,"author":{"gitId":"hussain1998"},"content":"    /**","isFullCredit":false},{"lineNumber":133,"author":{"gitId":"hussain1998"},"content":"     * Error message when the file is corrupted","isFullCredit":false},{"lineNumber":134,"author":{"gitId":"hussain1998"},"content":"     */","isFullCredit":false},{"lineNumber":135,"author":{"gitId":"hussain1998"},"content":"    public void corruptedFileError() {","isFullCredit":false},{"lineNumber":136,"author":{"gitId":"hussain1998"},"content":"        System.out.println(\"Parts of file were corrupted with wrong commands. Loaded only the uncorrupted commands.\");","isFullCredit":false},{"lineNumber":137,"author":{"gitId":"hussain1998"},"content":"    }","isFullCredit":false},{"lineNumber":138,"author":{"gitId":"hussain1998"},"content":"}","isFullCredit":false}],"authorContributionMap":{"hussain1998":138}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"hussain1998"},"content":"list","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"hussain1998"},"content":"todo I want to learn a new language","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"hussain1998"},"content":"add I want to sleep","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"hussain1998"},"content":"deadline cs3235 quiz /by this friday","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"hussain1998"},"content":"event cs2113t meeting /at this sunday 10am","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"hussain1998"},"content":"todo sleep early everyday","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"hussain1998"},"content":"todo eat properly","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"hussain1998"},"content":"done 4","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"hussain1998"},"content":"deadline homework /by tonight","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"hussain1998"},"content":"done 6","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"hussain1998"},"content":"event lecture /at tmr","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"hussain1998"},"content":"done ","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"hussain1998"},"content":"deadline ","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"hussain1998"},"content":"todo","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"hussain1998"},"content":"delete 1","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"hussain1998"},"content":"event ","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"hussain1998"},"content":"done 1","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"hussain1998"},"content":"done 2","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"hussain1998"},"content":"done 3","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"hussain1998"},"content":"done 5","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"hussain1998"},"content":"done 7","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"hussain1998"},"content":"delete 7","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"hussain1998"},"content":"find want","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"hussain1998"},"content":"list","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"hussain1998"},"content":"bye","isFullCredit":false}],"authorContributionMap":{"hussain1998":25}}]
