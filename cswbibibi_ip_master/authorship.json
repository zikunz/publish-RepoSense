[{"path":"docs/README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"cswbibibi"},"content":"# Duke User Guide","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"-"},"content":"## Features ","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"cswbibibi"},"content":"1. Add tasks to the list","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"cswbibibi"},"content":"   1. todo task","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"cswbibibi"},"content":"   1. deadline task","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"cswbibibi"},"content":"   1. event task","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"cswbibibi"},"content":"2. View all tasks in the list","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"cswbibibi"},"content":"3. Mark task as done ","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"cswbibibi"},"content":"4. Store updated task list in duke.txt","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"cswbibibi"},"content":"5. Delete task","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"cswbibibi"},"content":"6. Search keyword in all tasks","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"-"},"content":"### Feature 1","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"cswbibibi"},"content":"Enter \"todo **task description**\" to add a todo task in the task list\\","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"cswbibibi"},"content":"Enter \"deadline **task description** /by **date time**\" to add deadline task in the task list\\","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"cswbibibi"},"content":"Enter \"event **task description** /at **date time**\" to add a todo task\\","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"cswbibibi"},"content":"User can input anything to replace the **bold** command part","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"cswbibibi"},"content":"### Feature 2","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"cswbibibi"},"content":"Enter \"list\" to view all tasks in the current task list","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"cswbibibi"},"content":"### Feature 3","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"cswbibibi"},"content":"Enter \"done **task number**\" to mark that task as done\\","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"cswbibibi"},"content":"User can input any task number to replace the **bold** command part","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"cswbibibi"},"content":"### Feature 4","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"cswbibibi"},"content":"This feature is achieved automatically without user command","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"cswbibibi"},"content":"### Feature 5","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"cswbibibi"},"content":"Enter \"delete **task number**\"\\","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"cswbibibi"},"content":"User can input any task number to replace the **bold** command part","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"cswbibibi"},"content":"### Feature 6","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"cswbibibi"},"content":"Enter \"find **task description**\"\\","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"cswbibibi"},"content":"User can input anything they want to search to replace the **bold** command part","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"-"},"content":"## Usage","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"cswbibibi"},"content":"### `Keyword` - todo / deadline / event","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"cswbibibi"},"content":"Add Todo, Deadline and Event task in the task list","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"cswbibibi"},"content":"Example of usage: \\","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"cswbibibi"},"content":"`todo study`\\","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"cswbibibi"},"content":"`deadline homework /by Monday`\\","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"cswbibibi"},"content":"`event meeting /at tmr 2pm`","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"cswbibibi"},"content":"Expected outcome:\\","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"cswbibibi"},"content":"`Got it. I\u0027ve added this task:`\\","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"cswbibibi"},"content":"`[T][✘] study`\\","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"cswbibibi"},"content":"`Now you have 1 tasks in the list.`","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"cswbibibi"},"content":"`Got it. I\u0027ve added this task:`\\","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"cswbibibi"},"content":"`[D][✘] homework (by: Monday)`\\","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"cswbibibi"},"content":"`Now you have 2 tasks in the list. `","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"cswbibibi"},"content":"`Got it. I\u0027ve added this task:`\\","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"cswbibibi"},"content":"`[E][✘] meeting (at: tmr 2pm)`\\","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"cswbibibi"},"content":"`Now you have 3 tasks in the list. `","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"cswbibibi"},"content":"### `Keyword` - done ","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"cswbibibi"},"content":"Mark certain task as done","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"cswbibibi"},"content":"","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"cswbibibi"},"content":"Example of usage: \\","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"cswbibibi"},"content":"`done 1`","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"cswbibibi"},"content":"","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"cswbibibi"},"content":"Expected outcome:\\","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"cswbibibi"},"content":"`Nice! I\u0027ve marked this task as done:`\\","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"cswbibibi"},"content":"`[T][✓] study`","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"cswbibibi"},"content":"","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"cswbibibi"},"content":"### `Keyword` - delete","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"cswbibibi"},"content":"delete certain task in the list","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"cswbibibi"},"content":"","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"cswbibibi"},"content":"Example of usage: \\","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"cswbibibi"},"content":"`delete 2`","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"cswbibibi"},"content":"","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"cswbibibi"},"content":"Expected outcome:\\","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"cswbibibi"},"content":"`Noted. I\u0027ve removed this task:`\\","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"cswbibibi"},"content":"`[D][✘] homework (by: Monday)`\\","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"cswbibibi"},"content":"`Now you have 2 tasks in the list.`","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"cswbibibi"},"content":"","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"cswbibibi"},"content":"### `Keyword` - list","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"cswbibibi"},"content":"view the updated task list","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"cswbibibi"},"content":"","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"cswbibibi"},"content":"Example of usage: \\","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"cswbibibi"},"content":"`list`","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"cswbibibi"},"content":"","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"cswbibibi"},"content":"Expected outcome:\\","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"cswbibibi"},"content":"`1.[T][✓] study`\\","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"cswbibibi"},"content":"`2.[E][✘] meeting (at: tmr 2pm)`","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"cswbibibi"},"content":"","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"cswbibibi"},"content":"","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"cswbibibi"},"content":"### `Keyword` - find","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"cswbibibi"},"content":"find tasks in the list that matches the keyword","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"cswbibibi"},"content":"","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"cswbibibi"},"content":"Example of usage: \\","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"cswbibibi"},"content":"`find tmr`","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"cswbibibi"},"content":"","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"cswbibibi"},"content":"Expected outcome:\\","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"cswbibibi"},"content":"`Here are the matching tasks in your list:`\\","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"cswbibibi"},"content":"`2.[E][✘] meeting (at: tmr 2pm))`","isFullCredit":false}],"authorContributionMap":{"cswbibibi":84,"-":12}},{"path":"duke.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"cswbibibi"},"content":"E | 0 | shuwen attend CS2113 Lecture |  Friday 19 Feb 2021 from 4-6pm","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"cswbibibi"},"content":"","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"cswbibibi"},"content":"T | 1 | eat","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"cswbibibi"},"content":"D | 1 | hw |  TMW","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"cswbibibi"},"content":"E | 0 | meeting |  today","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"cswbibibi"},"content":"T | 1 | eat","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"cswbibibi"},"content":"D | 1 | hw |  Monday","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"cswbibibi"},"content":"E | 0 | meeting |  today","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"cswbibibi"},"content":"T | 0 | hehe","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"cswbibibi"},"content":"D | 0 | assesment |  Next Monday","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"cswbibibi"},"content":"E | 0 | meeting |  weekend","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"cswbibibi"},"content":"T | 0 | deat","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"cswbibibi"},"content":"T | 0 | sleep","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"cswbibibi"},"content":"T | 0 | tuition","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"cswbibibi"},"content":"T | 1 | eat","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"cswbibibi"},"content":"T | 1 | eat","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"cswbibibi"},"content":"T | 1 | eat","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"cswbibibi"},"content":"D | 1 | hw |  Monday","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"cswbibibi"},"content":"E | 0 | meeting |  tmr","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"cswbibibi"},"content":"T | 0 | 1","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"cswbibibi"},"content":"T | 0 | 2","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"cswbibibi"},"content":"T | 0 | 3","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"cswbibibi"},"content":"T | 0 | 4","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"cswbibibi"},"content":"T | 0 | 1","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"cswbibibi"},"content":"T | 0 | 2","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"cswbibibi"},"content":"T | 0 | 3","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"cswbibibi"},"content":"T | 0 | 4","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"cswbibibi"},"content":"T | 0 | 5","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"cswbibibi"},"content":"T | 0 | 1","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"cswbibibi"},"content":"T | 0 | 2","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"cswbibibi"},"content":"T | 0 | 3","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"cswbibibi"},"content":"T | 0 | 4","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"cswbibibi"},"content":"T | 0 | 1","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"cswbibibi"},"content":"T | 0 | 2","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"cswbibibi"},"content":"T | 0 | 3","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"cswbibibi"},"content":"T | 0 | 4","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"cswbibibi"},"content":"D | 1 | hw |  monday","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"cswbibibi"},"content":"T | 0 | 1","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"cswbibibi"},"content":"T | 0 | 2","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"cswbibibi"},"content":"T | 0 | 3","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"cswbibibi"},"content":"T | 1 | eat","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"cswbibibi"},"content":"T | 0 | sleep","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"cswbibibi"},"content":"D | 1 | Assesment |  24th Feb","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"cswbibibi"},"content":"E | 1 | assignment 1 |  Next Wednesday","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"cswbibibi"},"content":"T | 0 | 1","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"cswbibibi"},"content":"T | 0 | 2","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"cswbibibi"},"content":"T | 0 | 4","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"cswbibibi"},"content":"T | 0 | 5","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"cswbibibi"},"content":"T | 0 | 1","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"cswbibibi"},"content":"T | 0 | 2","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"cswbibibi"},"content":"T | 0 | 3","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"cswbibibi"},"content":"T | 0 | 4","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"cswbibibi"},"content":"T | 0 | 1","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"cswbibibi"},"content":"T | 0 | 2","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"cswbibibi"},"content":"T | 0 | 3","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"cswbibibi"},"content":"T | 0 | 1","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"cswbibibi"},"content":"T | 0 | 2","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"cswbibibi"},"content":"T | 0 | 3","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"cswbibibi"},"content":"T | 0 | 4","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"cswbibibi"},"content":"D | 0 | hw |  2021-02-24","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"cswbibibi"},"content":"T | 1 | eat","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"cswbibibi"},"content":"D | 0 | hw |  monday","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"cswbibibi"},"content":"D | 0 | hw | Mondsy","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"cswbibibi"},"content":"E | 0 | hw | monday","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"cswbibibi"},"content":"D | 0 | sw | Monday","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"cswbibibi"},"content":"D | 0 | assessment | 2021-02-24","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"cswbibibi"},"content":"D | 0 | aw | 2021-02-24","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"cswbibibi"},"content":"D | 0 | hw | 2020-02-24","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"cswbibibi"},"content":"D | 0 | hw | 2020-02-24","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"cswbibibi"},"content":"D | 0 | assessment | 2�? 24 2021","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"cswbibibi"},"content":"T | 0 | read","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"cswbibibi"},"content":"T | 0 | read book","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"cswbibibi"},"content":"D | 0 | buy book | tmr","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"cswbibibi"},"content":"E | 0 | book eicket | tmr","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"cswbibibi"},"content":"T | 0 | read","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"cswbibibi"},"content":"T | 0 | read book","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"cswbibibi"},"content":"D | 0 | by book | moday","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"cswbibibi"},"content":"E | 0 | book ticket | monsy","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"cswbibibi"},"content":"T | 1 | eat","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"cswbibibi"},"content":"T | 0 | read","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"cswbibibi"},"content":"T | 0 | book","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"cswbibibi"},"content":"D | 0 | book hw | monrda","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"cswbibibi"},"content":"E | 0 | ticket book | sunday","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"cswbibibi"},"content":"T | 0 | read","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"cswbibibi"},"content":"T | 0 | book readk","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"cswbibibi"},"content":"T | 0 | read book","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"cswbibibi"},"content":"T | 0 | book","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"cswbibibi"},"content":"T | 0 | read","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"cswbibibi"},"content":"T | 0 | book read","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"cswbibibi"},"content":"T | 0 | read","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"cswbibibi"},"content":"T | 0 | book","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"cswbibibi"},"content":"T | 0 | read book","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"cswbibibi"},"content":"T | 0 | read","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"cswbibibi"},"content":"D | 0 | book read | Monday","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"cswbibibi"},"content":"E | 0 | booking | sundaing","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"cswbibibi"},"content":"T | 1 | eat","isFullCredit":false}],"authorContributionMap":{"cswbibibi":96}},{"path":"src/main/java/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"cswbibibi"},"content":"import java.io.*;","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"cswbibibi"},"content":"import java.util.Scanner;","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"cswbibibi"},"content":"import duke.Deadline;","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"cswbibibi"},"content":"import duke.Task;","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"cswbibibi"},"content":"import duke.Event;","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"cswbibibi"},"content":"import duke.Todo;","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"cswbibibi"},"content":"import java.time.LocalDate;","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"cswbibibi"},"content":"import java.time.format.DateTimeFormatter;","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"cswbibibi"},"content":"","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"-"},"content":"public class Duke {","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"cswbibibi"},"content":"","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"cswbibibi"},"content":"    /**","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"cswbibibi"},"content":"     * final integer to represents various index to indicate task name and deadline/event date","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"cswbibibi"},"content":"     */","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"cswbibibi"},"content":"    static final int BY_AT_INDEX \u003d 4;","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"cswbibibi"},"content":"    static final int FIND_INDEX \u003d 5;","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"cswbibibi"},"content":"    static final int TODO_INDEX \u003d 5;","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"cswbibibi"},"content":"    static final int EVENT_INDEX \u003d 6;","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"cswbibibi"},"content":"    static final int DELETE_INDEX \u003d 7;","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"cswbibibi"},"content":"    static final int DEADLINE_INDEX \u003d 9;","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"cswbibibi"},"content":"    static final int MAX_NO_OF_TASKS \u003d 100;","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"cswbibibi"},"content":"","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"cswbibibi"},"content":"    private Ui ui;","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"cswbibibi"},"content":"    private TaskList tl;","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"cswbibibi"},"content":"    private Storage storage;","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"cswbibibi"},"content":"    final private static Task[] tasks \u003d new Task[MAX_NO_OF_TASKS];","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"cswbibibi"},"content":"    final private static String filePath \u003d \"C:/Users/XPS/Desktop/duke.txt\";","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"cswbibibi"},"content":"","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"cswbibibi"},"content":"    /**","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"cswbibibi"},"content":"     * Initiate the Ui Class and Storage Class with the default filepath","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"cswbibibi"},"content":"     * @param filePath an default filepath to store duke.txt","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"cswbibibi"},"content":"     */","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"cswbibibi"},"content":"    public Duke(String filePath) {","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"cswbibibi"},"content":"        ui \u003d new Ui();","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"cswbibibi"},"content":"        storage \u003d new Storage(filePath);","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"cswbibibi"},"content":"    }","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"cswbibibi"},"content":"","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"cswbibibi"},"content":"    /**","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"cswbibibi"},"content":"     * main method to run Duke, use if else statement to differentiate different","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"cswbibibi"},"content":"     * command entered by the user","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"cswbibibi"},"content":"     */","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"cswbibibi"},"content":"    public void run() {","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"cswbibibi"},"content":"        int index \u003d 0;","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"cswbibibi"},"content":"        String task;","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"cswbibibi"},"content":"        Scanner b \u003d new Scanner(System.in);","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"cswbibibi"},"content":"        task \u003d b.nextLine();","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"cswbibibi"},"content":"        while (true) {","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"cswbibibi"},"content":"            if (task.equalsIgnoreCase(\"bye\")) {","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"cswbibibi"},"content":"                ui.showExitMessage();","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"cswbibibi"},"content":"                break;","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"cswbibibi"},"content":"            } else if (task.equals(\"list\")) {","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"cswbibibi"},"content":"                tl.showAllTasks(index, tasks);","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"cswbibibi"},"content":"            } else if (task.contains(\"done\")) {","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"cswbibibi"},"content":"                try {","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"cswbibibi"},"content":"                    String taskNo \u003d task.substring(TODO_INDEX);","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"cswbibibi"},"content":"                    int newTaskNo \u003d Parser.parseInt(taskNo);","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"cswbibibi"},"content":"                    tasks[newTaskNo - 1].setTaskStatus(true);","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"cswbibibi"},"content":"                    tl.markAsDone(newTaskNo-1, tasks);","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"cswbibibi"},"content":"                    storage.replaceTXT(tasks[newTaskNo - 1].getDescription());","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"cswbibibi"},"content":"                } catch (StringIndexOutOfBoundsException e) {","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"cswbibibi"},"content":"                    ui.doneIndexError();","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"cswbibibi"},"content":"                } catch (IOException e) {","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"cswbibibi"},"content":"                    ui.exceptionMessage();","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"cswbibibi"},"content":"                }","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"cswbibibi"},"content":"            } else if (task.contains(\"todo\")) {","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"cswbibibi"},"content":"                try {","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"cswbibibi"},"content":"                    String taskName \u003d task.substring(TODO_INDEX);","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"cswbibibi"},"content":"                    tasks[index] \u003d new Todo(taskName, \u0027T\u0027);","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"cswbibibi"},"content":"                    index \u003d tl.addTaskMessage(index, tasks[index]);","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"cswbibibi"},"content":"                    String textToAppend \u003d \"T | 0 | \" + taskName;","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"cswbibibi"},"content":"                    storage.appendToFile(filePath, textToAppend);","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"cswbibibi"},"content":"                } catch (StringIndexOutOfBoundsException e) {","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"cswbibibi"},"content":"                    ui.todoIndexError();","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"cswbibibi"},"content":"                } catch (FileNotFoundException e) {","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"cswbibibi"},"content":"                    ui.fileErrorMessage();","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"cswbibibi"},"content":"                } catch (IOException e) {","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"cswbibibi"},"content":"                    ui.exceptionMessage();","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"cswbibibi"},"content":"                    e.getMessage();","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"cswbibibi"},"content":"                }","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"cswbibibi"},"content":"            } else if (task.contains(\"deadline\")) {","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"cswbibibi"},"content":"                try {","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"cswbibibi"},"content":"                    int slashSign \u003d task.indexOf(\"/\");","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"cswbibibi"},"content":"                    String ddlTaskName \u003d task.substring(DEADLINE_INDEX, slashSign - 1);","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"cswbibibi"},"content":"                    String by \u003d task.substring(slashSign + BY_AT_INDEX);","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"cswbibibi"},"content":"                    if (by.contains(\"-\")) { Parser.parseDate(by); }","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"cswbibibi"},"content":"                    tasks[index] \u003d new Deadline(ddlTaskName, \u0027D\u0027, by);","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"cswbibibi"},"content":"                    index \u003d tl.addTaskMessage(index, tasks[index]);","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"cswbibibi"},"content":"                    String textToAppend \u003d \"D | 0 | \" + ddlTaskName + \" | \" + by;","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"cswbibibi"},"content":"                    Storage.appendToFile(filePath, textToAppend);","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"cswbibibi"},"content":"                } catch (StringIndexOutOfBoundsException e) {","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"cswbibibi"},"content":"                    ui.deadlineIndexError();","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"cswbibibi"},"content":"                } catch (FileNotFoundException e) {","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"cswbibibi"},"content":"                    ui.fileErrorMessage();","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"cswbibibi"},"content":"                } catch (IOException e) {","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"cswbibibi"},"content":"                    ui.exceptionMessage();","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"cswbibibi"},"content":"                    e.getMessage();","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"cswbibibi"},"content":"                }","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"cswbibibi"},"content":"            } else if (task.contains(\"event\")) {","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"cswbibibi"},"content":"                try {","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"cswbibibi"},"content":"                    int slashSign \u003d task.indexOf(\"/\");","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"cswbibibi"},"content":"                    String eventTaskName \u003d task.substring(EVENT_INDEX, slashSign - 1);","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"cswbibibi"},"content":"                    String at \u003d task.substring(slashSign + BY_AT_INDEX);","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"cswbibibi"},"content":"                    tasks[index] \u003d new Event(eventTaskName, \u0027E\u0027, at);","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"cswbibibi"},"content":"                    index \u003d tl.addTaskMessage(index, tasks[index]);","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"cswbibibi"},"content":"                    String textToAppend \u003d \"E | 0 | \" + eventTaskName + \" | \" + at;","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"cswbibibi"},"content":"                    storage.appendToFile(filePath, textToAppend);","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"cswbibibi"},"content":"                } catch (StringIndexOutOfBoundsException e) {","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"cswbibibi"},"content":"                    ui.eventIndexError();","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"cswbibibi"},"content":"                } catch (FileNotFoundException e) {","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"cswbibibi"},"content":"                    ui.fileErrorMessage();","isFullCredit":false},{"lineNumber":111,"author":{"gitId":"cswbibibi"},"content":"                } catch (IOException e) {","isFullCredit":false},{"lineNumber":112,"author":{"gitId":"cswbibibi"},"content":"                    ui.exceptionMessage();","isFullCredit":false},{"lineNumber":113,"author":{"gitId":"cswbibibi"},"content":"                    e.getMessage();","isFullCredit":false},{"lineNumber":114,"author":{"gitId":"cswbibibi"},"content":"                }","isFullCredit":false},{"lineNumber":115,"author":{"gitId":"cswbibibi"},"content":"            } else if (task.contains(\"delete\")) {","isFullCredit":false},{"lineNumber":116,"author":{"gitId":"cswbibibi"},"content":"                try {","isFullCredit":false},{"lineNumber":117,"author":{"gitId":"cswbibibi"},"content":"                    int deleteIndex \u003d Parser.parseInt(task.substring(DELETE_INDEX));","isFullCredit":false},{"lineNumber":118,"author":{"gitId":"cswbibibi"},"content":"                    Task delete_task \u003d tasks[deleteIndex - 1];","isFullCredit":false},{"lineNumber":119,"author":{"gitId":"cswbibibi"},"content":"                    tl.removeTaskMessage(index, delete_task);","isFullCredit":false},{"lineNumber":120,"author":{"gitId":"cswbibibi"},"content":"                    tl.removeTask(deleteIndex, index, tasks);","isFullCredit":false},{"lineNumber":121,"author":{"gitId":"cswbibibi"},"content":"                }  catch (StringIndexOutOfBoundsException e) {","isFullCredit":false},{"lineNumber":122,"author":{"gitId":"cswbibibi"},"content":"                    ui.deleteIndexError();","isFullCredit":false},{"lineNumber":123,"author":{"gitId":"cswbibibi"},"content":"                }","isFullCredit":false},{"lineNumber":124,"author":{"gitId":"cswbibibi"},"content":"            } else if (task.contains(\"find\")) {","isFullCredit":false},{"lineNumber":125,"author":{"gitId":"cswbibibi"},"content":"                String findTask \u003d task.substring(FIND_INDEX);","isFullCredit":false},{"lineNumber":126,"author":{"gitId":"cswbibibi"},"content":"                tl.findTasks(index, findTask, tasks);","isFullCredit":false},{"lineNumber":127,"author":{"gitId":"cswbibibi"},"content":"            } else { ui.showErrorMessage(); }","isFullCredit":false},{"lineNumber":128,"author":{"gitId":"cswbibibi"},"content":"            task \u003d b.nextLine();","isFullCredit":false},{"lineNumber":129,"author":{"gitId":"cswbibibi"},"content":"        }","isFullCredit":false},{"lineNumber":130,"author":{"gitId":"cswbibibi"},"content":"    }","isFullCredit":false},{"lineNumber":131,"author":{"gitId":"cswbibibi"},"content":"","isFullCredit":false},{"lineNumber":132,"author":{"gitId":"cswbibibi"},"content":"    /**","isFullCredit":false},{"lineNumber":133,"author":{"gitId":"cswbibibi"},"content":"     * main method to run the program, initiate a new Duke Class with the specified","isFullCredit":false},{"lineNumber":134,"author":{"gitId":"cswbibibi"},"content":"     * filepath to store task data and run the program","isFullCredit":false},{"lineNumber":135,"author":{"gitId":"cswbibibi"},"content":"     * @param args contains the command-line arguments passed to the Duke program upon invocation","isFullCredit":false},{"lineNumber":136,"author":{"gitId":"cswbibibi"},"content":"     */","isFullCredit":false},{"lineNumber":137,"author":{"gitId":"-"},"content":"    public static void main(String[] args) {","isFullCredit":false},{"lineNumber":138,"author":{"gitId":"cswbibibi"},"content":"        new Duke(filePath).run();","isFullCredit":false},{"lineNumber":139,"author":{"gitId":"-"},"content":"    }","isFullCredit":false},{"lineNumber":140,"author":{"gitId":"-"},"content":"}","isFullCredit":false},{"lineNumber":141,"author":{"gitId":"cswbibibi"},"content":"","isFullCredit":false},{"lineNumber":142,"author":{"gitId":"cswbibibi"},"content":"","isFullCredit":false}],"authorContributionMap":{"cswbibibi":138,"-":4}},{"path":"src/main/java/DukeException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"cswbibibi"},"content":"public class DukeException extends Exception{","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"cswbibibi"},"content":"","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"cswbibibi"},"content":"","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"cswbibibi"},"content":"}","isFullCredit":false}],"authorContributionMap":{"cswbibibi":4}},{"path":"src/main/java/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"cswbibibi"},"content":"import java.time.LocalDate;","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"cswbibibi"},"content":"import java.time.format.DateTimeFormatter;","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"cswbibibi"},"content":"","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"cswbibibi"},"content":"public class Parser {","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"cswbibibi"},"content":"    /**","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"cswbibibi"},"content":"     * Returns an integer that can be used as task index","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"cswbibibi"},"content":"     * @param input input string that user entered","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"cswbibibi"},"content":"     * @return the integer index that user entered","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"cswbibibi"},"content":"     */","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"cswbibibi"},"content":"    protected static int parseInt(String input) {","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"cswbibibi"},"content":"        return Integer.parseInt(input);","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"cswbibibi"},"content":"    }","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"cswbibibi"},"content":"","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"cswbibibi"},"content":"    protected static void parseDate(String by) {","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"cswbibibi"},"content":"        LocalDate date \u003d LocalDate.parse(by);","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"cswbibibi"},"content":"        by \u003d date.format(DateTimeFormatter.ofPattern(\"MMM d yyyy\"));","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"cswbibibi"},"content":"    }","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"cswbibibi"},"content":"}","isFullCredit":false}],"authorContributionMap":{"cswbibibi":18}},{"path":"src/main/java/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"cswbibibi"},"content":"import java.io.*;","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"cswbibibi"},"content":"import java.io.File;","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"cswbibibi"},"content":"","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"cswbibibi"},"content":"public class Storage {","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"cswbibibi"},"content":"    private final String filePath;","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"cswbibibi"},"content":"","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"cswbibibi"},"content":"    /**","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"cswbibibi"},"content":"     * Constructor for Storage Class","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"cswbibibi"},"content":"     * @param filePath default filepath to store duke.txt file","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"cswbibibi"},"content":"     */","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"cswbibibi"},"content":"    public Storage(String filePath) {","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"cswbibibi"},"content":"        this.filePath \u003d filePath;","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"cswbibibi"},"content":"    }","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"cswbibibi"},"content":"","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"cswbibibi"},"content":"","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"cswbibibi"},"content":"    /**","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"cswbibibi"},"content":"     * Crate a FileWriter object that appends to the file Duke.txt","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"cswbibibi"},"content":"     * with the specific task description each time a new task is created","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"cswbibibi"},"content":"     * @param filePath the default filepath for duke.txt","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"cswbibibi"},"content":"     * @param textToAppend the description of the new task added","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"cswbibibi"},"content":"     * @throws IOException throw the IOException when the program successfully opened","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"cswbibibi"},"content":"     * the file but is unable to read the duke.txt file","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"cswbibibi"},"content":"     */","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"cswbibibi"},"content":"    protected static void appendToFile(String filePath, String textToAppend) throws IOException {","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"cswbibibi"},"content":"        FileWriter fw \u003d new FileWriter(filePath, true);","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"cswbibibi"},"content":"        fw.write(textToAppend + \"\\n\");","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"cswbibibi"},"content":"        fw.close();","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"cswbibibi"},"content":"    }","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"cswbibibi"},"content":"","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"cswbibibi"},"content":"    /**","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"cswbibibi"},"content":"     * Read the content of existing file and replace task status of a task from 0 to 1 when it\u0027s mark as done.","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"cswbibibi"},"content":"     * Finally crate a FileWriter object to rewrite the file with replaced text and unchanged texts.","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"cswbibibi"},"content":"     * @param name The description of the task that is marked as done","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"cswbibibi"},"content":"     * @throws IOException throw the IOException when the program successfully opened","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"cswbibibi"},"content":"     * the file, but is unable to read the duke.txt file","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"cswbibibi"},"content":"     */","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"cswbibibi"},"content":"    public static void replaceTXT(String name) throws IOException {","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"cswbibibi"},"content":"        File file \u003d new File(\"C:/Users/XPS/Desktop/duke.txt\");","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"cswbibibi"},"content":"        BufferedReader reader \u003d new BufferedReader(new FileReader(file));","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"cswbibibi"},"content":"        String line \u003d \"\";","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"cswbibibi"},"content":"        String oldText \u003d \"\";","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"cswbibibi"},"content":"        while ((line \u003d reader.readLine()) !\u003d null) {","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"cswbibibi"},"content":"            oldText +\u003d line + \"\\r\\n\";","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"cswbibibi"},"content":"        }","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"cswbibibi"},"content":"        reader.close();","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"cswbibibi"},"content":"        String replacedText \u003d oldText.replace(\"0 | \" + name , \"1 | \" + name);","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"cswbibibi"},"content":"        FileWriter writer \u003d new FileWriter(\"C:/Users/XPS/Desktop/duke.txt\");","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"cswbibibi"},"content":"        writer.write(replacedText);","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"cswbibibi"},"content":"        writer.close();","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"cswbibibi"},"content":"    }","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"cswbibibi"},"content":"","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"cswbibibi"},"content":"}","isFullCredit":false}],"authorContributionMap":{"cswbibibi":52}},{"path":"src/main/java/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"cswbibibi"},"content":"import duke.Task;","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"cswbibibi"},"content":"","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"cswbibibi"},"content":"public class TaskList {","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"cswbibibi"},"content":"    /**","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"cswbibibi"},"content":"     * Delete certain task when user use the delete command","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"cswbibibi"},"content":"     * @param deleteIndex the task index that user entered to be deleted","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"cswbibibi"},"content":"     * @param index the maximum index number of the current task list","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"cswbibibi"},"content":"     * @param tasks the original task list that the user has inputted so far","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"cswbibibi"},"content":"     */","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"cswbibibi"},"content":"    protected static void removeTask(int deleteIndex, int index, Task[] tasks) {","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"cswbibibi"},"content":"        if (deleteIndex - 1 \u003d\u003d index) {","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"cswbibibi"},"content":"        } else {","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"cswbibibi"},"content":"            for (int i \u003d deleteIndex - 1; i \u003c\u003d index; i++) {","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"cswbibibi"},"content":"                tasks[i] \u003d tasks[i + 1];","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"cswbibibi"},"content":"            }","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"cswbibibi"},"content":"        }","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"cswbibibi"},"content":"        index -\u003d 1;","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"cswbibibi"},"content":"    }","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"cswbibibi"},"content":"","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"cswbibibi"},"content":"    /**","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"cswbibibi"},"content":"     * Return message to inform the user that the task has been deleted","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"cswbibibi"},"content":"     * message include task description, task type and its by/at date time","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"cswbibibi"},"content":"     * and the remaining number of tasks in the list","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"cswbibibi"},"content":"     * @param index the maximum index number of the current task list","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"cswbibibi"},"content":"     * @param tasks the original task list that the user has inputted so far","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"cswbibibi"},"content":"     */","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"cswbibibi"},"content":"    protected static void removeTaskMessage(int index, Task tasks) {","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"cswbibibi"},"content":"        System.out.println(\"Noted. I\u0027ve removed this task: \");","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"cswbibibi"},"content":"        System.out.println(\"  \" + tasks.toString());","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"cswbibibi"},"content":"        System.out.println(\"Now you have \" + (index - 1) + \" tasks in the list.\");","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"cswbibibi"},"content":"    }","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"cswbibibi"},"content":"","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"cswbibibi"},"content":"    /**","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"cswbibibi"},"content":"     * Send message to inform the user that the task has been added","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"cswbibibi"},"content":"     * message include task description, task type and its by/at date time","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"cswbibibi"},"content":"     * and update the number of tasks in the list.","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"cswbibibi"},"content":"     * @param index the maximum index number of the current task list","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"cswbibibi"},"content":"     * @param tasks the original task list that the user has inputted so far","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"cswbibibi"},"content":"     * @return updated index to track the number of tasks in the task list","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"cswbibibi"},"content":"     */","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"cswbibibi"},"content":"    protected static int addTaskMessage(int index, Task tasks) {","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"cswbibibi"},"content":"        System.out.println(\"Got it. I\u0027ve added this task: \");","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"cswbibibi"},"content":"        System.out.println(\" \" + tasks.toString());","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"cswbibibi"},"content":"        System.out.println(\"Now you have \" + (index + 1) + \" tasks in the list. \");","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"cswbibibi"},"content":"        index++;","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"cswbibibi"},"content":"        return index;","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"cswbibibi"},"content":"    }","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"cswbibibi"},"content":"","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"cswbibibi"},"content":"    /**","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"cswbibibi"},"content":"     * Send message to inform the user that the task has been marked as done","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"cswbibibi"},"content":"     * @param index the index of the task to be marked as done","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"cswbibibi"},"content":"     * @param tasks the original task list that the user has inputted so far","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"cswbibibi"},"content":"     */","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"cswbibibi"},"content":"    protected static void markAsDone(int index, Task[] tasks) {","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"cswbibibi"},"content":"        System.out.println(\"Nice! I\u0027ve marked this task as done:\");","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"cswbibibi"},"content":"        System.out.println(tasks[index].toString());","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"cswbibibi"},"content":"    }","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"cswbibibi"},"content":"","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"cswbibibi"},"content":"    /**","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"cswbibibi"},"content":"     * Print all tasks in the task list","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"cswbibibi"},"content":"     * @param index the maximum index number of the current task list","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"cswbibibi"},"content":"     * @param tasks the original task list that the user has inputted so far","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"cswbibibi"},"content":"     */","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"cswbibibi"},"content":"    protected static void showAllTasks(int index, Task[] tasks) {","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"cswbibibi"},"content":"        try {","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"cswbibibi"},"content":"            for (int i \u003d 0; i \u003c index; i++) {","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"cswbibibi"},"content":"                System.out.println((i + 1) + \".\" + tasks[i].toString());","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"cswbibibi"},"content":"            }","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"cswbibibi"},"content":"        } catch (NullPointerException e) {","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"cswbibibi"},"content":"            // do not show error","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"cswbibibi"},"content":"        }","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"cswbibibi"},"content":"    }","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"cswbibibi"},"content":"","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"cswbibibi"},"content":"    /**","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"cswbibibi"},"content":"     * Print all the tasks that matched the keyword that user has entered","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"cswbibibi"},"content":"     * @param index the maximum index number of the current task list","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"cswbibibi"},"content":"     * @param keyword user input to be found in all tasks in the list","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"cswbibibi"},"content":"     * @param tasks the original task list that the use has inputted so far","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"cswbibibi"},"content":"     */","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"cswbibibi"},"content":"    protected static void findTasks(int index, String keyword, Task[] tasks) {","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"cswbibibi"},"content":"        try {","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"cswbibibi"},"content":"            System.out.println(\"Here are the matching tasks in your list: \");","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"cswbibibi"},"content":"            for (int i \u003d 0; i \u003c index; i++) {","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"cswbibibi"},"content":"                if (tasks[i].toString().contains(keyword)) {","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"cswbibibi"},"content":"                    System.out.println((i + 1) + \".\" + tasks[i].toString());","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"cswbibibi"},"content":"                }","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"cswbibibi"},"content":"            }","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"cswbibibi"},"content":"        } catch (NullPointerException e) {","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"cswbibibi"},"content":"            //","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"cswbibibi"},"content":"        }","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"cswbibibi"},"content":"    }","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"cswbibibi"},"content":"}","isFullCredit":false}],"authorContributionMap":{"cswbibibi":92}},{"path":"src/main/java/Ui.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"cswbibibi"},"content":"public class Ui {","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"cswbibibi"},"content":"    public Ui() {","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"cswbibibi"},"content":"        String logo \u003d \" ____        _        \\n\"","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"cswbibibi"},"content":"                + \"|  _ \\\\ _   _| | _____ \\n\"","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"cswbibibi"},"content":"                + \"| | | | | | | |/ / _ \\\\\\n\"","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"cswbibibi"},"content":"                + \"| |_| | |_| |   \u003c  __/\\n\"","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"cswbibibi"},"content":"                + \"|____/ \\\\__,_|_|\\\\_\\\\___|\\n\";","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"cswbibibi"},"content":"        System.out.println(\"Hello from\\n\" + logo);","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"cswbibibi"},"content":"        System.out.println(\"Here are the things that i can do: \");","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"cswbibibi"},"content":"        System.out.println(\"Add task to your list - todo, deadline and event tasks\");","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"cswbibibi"},"content":"        System.out.println(\"list: View all tasks in the list\");","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"cswbibibi"},"content":"        System.out.println(\"done: Done task and delete: Delete task\");","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"cswbibibi"},"content":"        System.out.println(\"bye: quite Duke\");","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"cswbibibi"},"content":"        System.out.println(\"Please enter the task you want to add in to the task list.\");","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"cswbibibi"},"content":"    }","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"cswbibibi"},"content":"","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"cswbibibi"},"content":"    /**","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"cswbibibi"},"content":"     * send Good-bye message when user exit the program","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"cswbibibi"},"content":"     */","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"cswbibibi"},"content":"    public void showExitMessage() {","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"cswbibibi"},"content":"        System.out.println(\"Thank you for using Duke function, \" +","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"cswbibibi"},"content":"                \"Hope to see you again :)\");","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"cswbibibi"},"content":"    }","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"cswbibibi"},"content":"","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"cswbibibi"},"content":"    /**","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"cswbibibi"},"content":"     * Send error message when user entered invalid command","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"cswbibibi"},"content":"     */","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"cswbibibi"},"content":"    public void showErrorMessage() {","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"cswbibibi"},"content":"        System.out.println(\":( OOps!! I\u0027m sorry, \" +","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"cswbibibi"},"content":"                \"but i don\u0027t know what that means...\");","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"cswbibibi"},"content":"    }","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"cswbibibi"},"content":"","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"cswbibibi"},"content":"    /**","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"cswbibibi"},"content":"     * Send StringIndexOutOfBoundsException error message when todo task is added without description","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"cswbibibi"},"content":"     */","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"cswbibibi"},"content":"    public void todoIndexError() {","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"cswbibibi"},"content":"        System.out.println(\":( OOps!! The description of a\" +","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"cswbibibi"},"content":"                \"todo cannot be empty\");","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"cswbibibi"},"content":"    }","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"cswbibibi"},"content":"","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"cswbibibi"},"content":"    /**","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"cswbibibi"},"content":"     * Send StringIndexOutOfBoundsException error message when event task is added without description","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"cswbibibi"},"content":"     */","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"cswbibibi"},"content":"    public void eventIndexError() {","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"cswbibibi"},"content":"        System.out.println(\":( OOps!! The description of a\" +","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"cswbibibi"},"content":"                \"event cannot be empty\");","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"cswbibibi"},"content":"    }","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"cswbibibi"},"content":"","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"cswbibibi"},"content":"    /**","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"cswbibibi"},"content":"     * Send StringIndexOutOfBoundsException error message when deadline task is added without description","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"cswbibibi"},"content":"     */","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"cswbibibi"},"content":"    public void deadlineIndexError() {","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"cswbibibi"},"content":"        System.out.println(\":( OOps!! The description of a\" +","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"cswbibibi"},"content":"                \"deadline cannot be empty\");","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"cswbibibi"},"content":"    }","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"cswbibibi"},"content":"","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"cswbibibi"},"content":"    /**","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"cswbibibi"},"content":"     * Send StringIndexOutOfBoundsException error message when user didn\u0027t enter which task index","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"cswbibibi"},"content":"     * to be mark as done","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"cswbibibi"},"content":"     */","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"cswbibibi"},"content":"    public void doneIndexError() {","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"cswbibibi"},"content":"        System.out.println(\":( OOps!! The index of task to be done\" +","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"cswbibibi"},"content":"                \"cannot be empty\");","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"cswbibibi"},"content":"    }","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"cswbibibi"},"content":"","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"cswbibibi"},"content":"    /**","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"cswbibibi"},"content":"     * Send StringIndexOutOfBoundsException error message when user didn\u0027t enter which task index","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"cswbibibi"},"content":"     * to be deleted","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"cswbibibi"},"content":"     */","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"cswbibibi"},"content":"    public void deleteIndexError() {","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"cswbibibi"},"content":"        System.out.println(\":( OOps!! The index of task to be deleted\" +","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"cswbibibi"},"content":"                \"cannot be empty\");","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"cswbibibi"},"content":"    }","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"cswbibibi"},"content":"","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"cswbibibi"},"content":"    /**","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"cswbibibi"},"content":"     * Send FileNotFoundException error message whe user add a task","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"cswbibibi"},"content":"     */","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"cswbibibi"},"content":"    public void fileErrorMessage() {","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"cswbibibi"},"content":"          System.out.println(\":( OOps!! The file you are looking for does\"+","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"cswbibibi"},"content":"                  \"not exist...\");","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"cswbibibi"},"content":"    }","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"cswbibibi"},"content":"","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"cswbibibi"},"content":"    /**","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"cswbibibi"},"content":"     * Send IOException error message when when the program successfully opened","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"cswbibibi"},"content":"     * the file, but is unable to read the duke.txt file","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"cswbibibi"},"content":"     */","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"cswbibibi"},"content":"    public void exceptionMessage() {","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"cswbibibi"},"content":"        System.out.println(\":( OOps!! Something is wrong when reading the file...\");","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"cswbibibi"},"content":"    }","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"cswbibibi"},"content":"}","isFullCredit":false}],"authorContributionMap":{"cswbibibi":90}},{"path":"src/main/java/duke/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"cswbibibi"},"content":"package duke;","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"cswbibibi"},"content":"","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"cswbibibi"},"content":"public class Deadline extends Task{","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"cswbibibi"},"content":"    String by;","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"cswbibibi"},"content":"","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"cswbibibi"},"content":"    public Deadline(String description, char taskType, String by) {","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"cswbibibi"},"content":"        super(description);","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"cswbibibi"},"content":"        this.taskType \u003d taskType;","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"cswbibibi"},"content":"        this.by \u003d by;","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"cswbibibi"},"content":"    }","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"cswbibibi"},"content":"","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"cswbibibi"},"content":"    public String getBy() {return by;}","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"cswbibibi"},"content":"","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"cswbibibi"},"content":"    /**","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"cswbibibi"},"content":"     * Returns the complete deadline task Description in task list","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"cswbibibi"},"content":"     * @return the task type, status and description in the task list","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"cswbibibi"},"content":"     */","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"cswbibibi"},"content":"    @Override","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"cswbibibi"},"content":"    public String toString() {","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"cswbibibi"},"content":"        return \"[D]\" + super.toString() + \" (by: \" + by + \")\";","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"cswbibibi"},"content":"    }","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"cswbibibi"},"content":"}","isFullCredit":false}],"authorContributionMap":{"cswbibibi":22}},{"path":"src/main/java/duke/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"cswbibibi"},"content":"package duke;","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"cswbibibi"},"content":"","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"cswbibibi"},"content":"public class Event extends Task{","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"cswbibibi"},"content":"    protected String at;","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"cswbibibi"},"content":"","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"cswbibibi"},"content":"    public Event(String description, char taskType, String at){","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"cswbibibi"},"content":"        super(description);","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"cswbibibi"},"content":"        this.taskType \u003d taskType;","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"cswbibibi"},"content":"        this.at \u003d at;","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"cswbibibi"},"content":"    }","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"cswbibibi"},"content":"","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"cswbibibi"},"content":"    public String getAt() {return at;}","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"cswbibibi"},"content":"","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"cswbibibi"},"content":"    /**","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"cswbibibi"},"content":"     * Returns the complete Event task description in task list","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"cswbibibi"},"content":"     * @return the task type, status and description in the task list","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"cswbibibi"},"content":"     */","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"cswbibibi"},"content":"    @Override","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"cswbibibi"},"content":"    public String toString() {","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"cswbibibi"},"content":"        return \"[E]\" + super.toString() + \" (at: \" + at + \")\";","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"cswbibibi"},"content":"    }","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"cswbibibi"},"content":"}","isFullCredit":false}],"authorContributionMap":{"cswbibibi":22}},{"path":"src/main/java/duke/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"cswbibibi"},"content":"package duke;","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"cswbibibi"},"content":"","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"cswbibibi"},"content":"public class Task {","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"cswbibibi"},"content":"    protected String description;","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"cswbibibi"},"content":"    protected boolean isDone;","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"cswbibibi"},"content":"    protected char taskType;","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"cswbibibi"},"content":"    private static char NOT_DONE_SYMBOL \u003d \u0027\\u2718\u0027;","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"cswbibibi"},"content":"    private static char DONE_SYMBOL \u003d \u0027\\u2713\u0027;","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"cswbibibi"},"content":"","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"cswbibibi"},"content":"    public Task(String description) {","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"cswbibibi"},"content":"        this.description \u003d description;","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"cswbibibi"},"content":"        this.isDone \u003d false;","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"cswbibibi"},"content":"    }","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"cswbibibi"},"content":"    public void setDescription(String description){","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"cswbibibi"},"content":"        this.description \u003d description;","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"cswbibibi"},"content":"    }","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"cswbibibi"},"content":"    public String getDescription() {return description;}","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"cswbibibi"},"content":"","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"cswbibibi"},"content":"    /**","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"cswbibibi"},"content":"     * Returns the complete task description in task list","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"cswbibibi"},"content":"     * @return the task status and description in the task list","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"cswbibibi"},"content":"     */","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"cswbibibi"},"content":"    public String toString(){","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"cswbibibi"},"content":"        return \"[\" + getStatusIcon() + \"] \" + description;","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"cswbibibi"},"content":"    }","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"cswbibibi"},"content":"","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"cswbibibi"},"content":"    /**","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"cswbibibi"},"content":"     * Returns the task status icon, either ✓(Done\u003dTrue) or X(Not Done\u003dFalse)","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"cswbibibi"},"content":"     * @return the respective status icon","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"cswbibibi"},"content":"     */","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"cswbibibi"},"content":"    public char getStatusIcon() {","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"cswbibibi"},"content":"        return (isDone ? DONE_SYMBOL : NOT_DONE_SYMBOL); //return Yes or No symbols","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"cswbibibi"},"content":"    }","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"cswbibibi"},"content":"    public void setTaskType(char taskType){","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"cswbibibi"},"content":"        this.taskType \u003d taskType;","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"cswbibibi"},"content":"    }","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"cswbibibi"},"content":"    public char getTaskType(){","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"cswbibibi"},"content":"        return taskType;","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"cswbibibi"},"content":"    }","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"cswbibibi"},"content":"","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"cswbibibi"},"content":"    /**","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"cswbibibi"},"content":"     * Set the task status","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"cswbibibi"},"content":"     * @param Done set the done status of a task to be true/false","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"cswbibibi"},"content":"     */","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"cswbibibi"},"content":"    public void setTaskStatus(boolean Done){","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"cswbibibi"},"content":"        this.isDone \u003d Done;","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"cswbibibi"},"content":"    }","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"cswbibibi"},"content":"    public boolean getTaskStatus(){","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"cswbibibi"},"content":"        return isDone;","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"cswbibibi"},"content":"    }","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"cswbibibi"},"content":"    public String getFileStatus(){return (isDone ? \"1\" : \"0\"); }","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"cswbibibi"},"content":"","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"cswbibibi"},"content":"}","isFullCredit":false}],"authorContributionMap":{"cswbibibi":53}},{"path":"src/main/java/duke/Todo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"cswbibibi"},"content":"package duke;","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"cswbibibi"},"content":"","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"cswbibibi"},"content":"public class Todo extends Task{","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"cswbibibi"},"content":"    public Todo(String description, char taskType) {","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"cswbibibi"},"content":"        super(description);","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"cswbibibi"},"content":"        this.taskType \u003d taskType;","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"cswbibibi"},"content":"    }","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"cswbibibi"},"content":"","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"cswbibibi"},"content":"    /**","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"cswbibibi"},"content":"     * Returns the complete Todo task description in task list","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"cswbibibi"},"content":"     * @return the task type, status and description in the task list","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"cswbibibi"},"content":"     */","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"cswbibibi"},"content":"    @Override","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"cswbibibi"},"content":"    public String toString() {","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"cswbibibi"},"content":"        return \"[T]\" + super.toString();","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"cswbibibi"},"content":"    }","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"cswbibibi"},"content":"}","isFullCredit":false}],"authorContributionMap":{"cswbibibi":17}}]
